{
  "swagger": "2.0",
  "info": {
    "description": "OpenMRS RESTful API documentation generated by Swagger",
    "version": "2.1.4",
    "title": "OpenMRS API Docs",
    "contact": {
      "name": "OpenMRS",
      "url": "http://openmrs.org"
    },
    "license": {
      "name": "MPL-2.0 w/ HD",
      "url": "http://openmrs.org/license"
    }
  },
  "host": "34.76.158.186",
  "basePath": "/openmrs/ws/rest/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "basic_auth": []
    },
    {
      "basic_auth": []
    }
  ],
  "paths": {
    "/concept": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch all non-retired concept resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConcepts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Must be used with source",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchType",
            "in": "query",
            "description": "Must be used with name",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "term",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "class",
            "in": "query",
            "description": "Must be used with name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "concept response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{uuid}": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConcept",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "concept response",
            "schema": {
              "$ref": "#/definitions/ConceptGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/fieldtype": {
      "get": {
        "tags": [
          "fieldtype"
        ],
        "summary": "Fetch all non-retired fieldtype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllFieldTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "fieldtype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/fieldtype/{uuid}": {
      "get": {
        "tags": [
          "fieldtype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getFieldType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "fieldtype response",
            "schema": {
              "$ref": "#/definitions/FieldtypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/customdatatype": {
      "get": {
        "tags": [
          "customdatatype"
        ],
        "summary": "Fetch all non-retired customdatatype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllCustomDatatypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customdatatype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/customdatatype/{uuid}": {
      "get": {
        "tags": [
          "customdatatype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getCustomDatatype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "customdatatype response",
            "schema": {
              "$ref": "#/definitions/CustomdatatypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "customdatatype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteCustomDatatype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encounterrole": {
      "get": {
        "tags": [
          "encounterrole"
        ],
        "summary": "Fetch all non-retired encounterrole resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllEncounterRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "encounterrole response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encounterrole/{uuid}": {
      "get": {
        "tags": [
          "encounterrole"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getEncounterRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "encounterrole response",
            "schema": {
              "$ref": "#/definitions/EncounterroleGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "encounterrole"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteEncounterRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptdatatype": {
      "get": {
        "tags": [
          "conceptdatatype"
        ],
        "summary": "Fetch all non-retired conceptdatatype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptDatatypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptdatatype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptdatatype/{uuid}": {
      "get": {
        "tags": [
          "conceptdatatype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptDatatype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptdatatype response",
            "schema": {
              "$ref": "#/definitions/ConceptdatatypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptdatatype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptDatatype",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptstopword": {
      "get": {
        "tags": [
          "conceptstopword"
        ],
        "summary": "Fetch all non-retired conceptstopword resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptStopwords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptstopword response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptstopword/{uuid}": {
      "get": {
        "tags": [
          "conceptstopword"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptStopword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptstopword response",
            "schema": {
              "$ref": "#/definitions/ConceptstopwordGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptstopword"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptStopword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visittype": {
      "get": {
        "tags": [
          "visittype"
        ],
        "summary": "Fetch all non-retired visittype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllVisitTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "visittype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visittype/{uuid}": {
      "get": {
        "tags": [
          "visittype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getVisitType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "visittype response",
            "schema": {
              "$ref": "#/definitions/VisittypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "visittype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteVisitType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/idgen/autogenerationoption": {
      "get": {
        "tags": [
          "idgenAutogenerationoption"
        ],
        "summary": "Fetch all non-retired idgen/autogenerationoption resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllAutoGenerationOptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "idgen/autogenerationoption response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/idgen/autogenerationoption/{uuid}": {
      "get": {
        "tags": [
          "idgenAutogenerationoption"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getAutoGenerationOption",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "idgen/autogenerationoption response",
            "schema": {
              "$ref": "#/definitions/IdgenAutogenerationoptionGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "idgenAutogenerationoption"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteAutoGenerationOption",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/program": {
      "get": {
        "tags": [
          "program"
        ],
        "summary": "Fetch all non-retired program resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllPrograms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "program response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/program/{uuid}": {
      "get": {
        "tags": [
          "program"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getProgram",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "program response",
            "schema": {
              "$ref": "#/definitions/ProgramGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "program"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteProgram",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visit": {
      "get": {
        "tags": [
          "visit"
        ],
        "summary": "Fetch all non-retired visit resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllVisits",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "visit response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visit/{uuid}": {
      "get": {
        "tags": [
          "visit"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getVisit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "visit response",
            "schema": {
              "$ref": "#/definitions/VisitGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "visit"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteVisit",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/caresetting": {
      "get": {
        "tags": [
          "caresetting"
        ],
        "summary": "Fetch all non-retired caresetting resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllCareSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "caresetting response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/caresetting/{uuid}": {
      "get": {
        "tags": [
          "caresetting"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getCareSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "caresetting response",
            "schema": {
              "$ref": "#/definitions/CaresettingGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "caresetting"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteCareSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encountertype": {
      "get": {
        "tags": [
          "encountertype"
        ],
        "summary": "Fetch all non-retired encountertype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllEncounterTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "encountertype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encountertype/{uuid}": {
      "get": {
        "tags": [
          "encountertype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getEncounterType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "encountertype response",
            "schema": {
              "$ref": "#/definitions/EncountertypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "encountertype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteEncounterType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patient": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Search for patient",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllPatients",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "matchSimilar",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "birthdate",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "address2",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchType",
            "in": "query",
            "description": "Must be used with identifier",
            "required": false,
            "type": "string"
          },
          {
            "name": "address1",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "familyname",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "middlename",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastviewed",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "postalcode",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "givenname",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Must be used with matchSimilar",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "patient response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/patient/{uuid}": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getPatient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "patient response",
            "schema": {
              "$ref": "#/definitions/PatientGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "patient"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePatient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/taskdefinition": {
      "get": {
        "tags": [
          "taskdefinition"
        ],
        "summary": "Fetch all non-retired taskdefinition resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllTaskDefinitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskdefinition response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/taskdefinition/{uuid}": {
      "get": {
        "tags": [
          "taskdefinition"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getTaskDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskdefinition response",
            "schema": {
              "$ref": "#/definitions/TaskdefinitionGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "taskdefinition"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteTaskDefinition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptmaptype": {
      "get": {
        "tags": [
          "conceptmaptype"
        ],
        "summary": "Fetch all non-retired conceptmaptype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptMapTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptmaptype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptmaptype/{uuid}": {
      "get": {
        "tags": [
          "conceptmaptype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptMapType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptmaptype response",
            "schema": {
              "$ref": "#/definitions/ConceptmaptypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptmaptype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptMapType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointmenttype": {
      "get": {
        "tags": [
          "appointmentschedulingAppointmenttype"
        ],
        "summary": "Fetch all non-retired appointmentscheduling/appointmenttype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllAppointmentTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointmenttype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointmenttype/{uuid}": {
      "get": {
        "tags": [
          "appointmentschedulingAppointmenttype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getAppointmentType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointmenttype response",
            "schema": {
              "$ref": "#/definitions/AppointmentschedulingAppointmenttypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "appointmentschedulingAppointmenttype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteAppointmentType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/privilege": {
      "get": {
        "tags": [
          "privilege"
        ],
        "summary": "Fetch all non-retired privilege resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllPrivileges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "privilege response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/privilege/{uuid}": {
      "get": {
        "tags": [
          "privilege"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getPrivilege",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "privilege response",
            "schema": {
              "$ref": "#/definitions/PrivilegeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "privilege"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePrivilege",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptattributetype": {
      "get": {
        "tags": [
          "conceptattributetype"
        ],
        "summary": "Fetch all non-retired conceptattributetype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptAttributeTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptattributetype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptattributetype/{uuid}": {
      "get": {
        "tags": [
          "conceptattributetype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptattributetype response",
            "schema": {
              "$ref": "#/definitions/ConceptattributetypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptattributetype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptsource": {
      "get": {
        "tags": [
          "conceptsource"
        ],
        "summary": "Fetch all non-retired conceptsource resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptsource response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptsource/{uuid}": {
      "get": {
        "tags": [
          "conceptsource"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptsource response",
            "schema": {
              "$ref": "#/definitions/ConceptsourceGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptsource"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointmentblock": {
      "get": {
        "tags": [
          "appointmentschedulingAppointmentblock"
        ],
        "summary": "Fetch all non-retired appointmentscheduling/appointmentblock resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllAppointmentBlocks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointmentblock response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointmentblock/{uuid}": {
      "get": {
        "tags": [
          "appointmentschedulingAppointmentblock"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getAppointmentBlock",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointmentblock response",
            "schema": {
              "$ref": "#/definitions/AppointmentschedulingAppointmentblockGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "appointmentschedulingAppointmentblock"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteAppointmentBlock",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/form": {
      "get": {
        "tags": [
          "form"
        ],
        "summary": "Fetch all non-retired form resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllForms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "form response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/form/{uuid}": {
      "get": {
        "tags": [
          "form"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "form response",
            "schema": {
              "$ref": "#/definitions/FormGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "form"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/personattributetype": {
      "get": {
        "tags": [
          "personattributetype"
        ],
        "summary": "Fetch all non-retired personattributetype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllPersonAttributeTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personattributetype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/personattributetype/{uuid}": {
      "get": {
        "tags": [
          "personattributetype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getPersonAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personattributetype response",
            "schema": {
              "$ref": "#/definitions/PersonattributetypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "personattributetype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePersonAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/location": {
      "get": {
        "tags": [
          "location"
        ],
        "summary": "Fetch all non-retired location resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "location response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/location/{uuid}": {
      "get": {
        "tags": [
          "location"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "location response",
            "schema": {
              "$ref": "#/definitions/LocationGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "location"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderset": {
      "get": {
        "tags": [
          "orderset"
        ],
        "summary": "Fetch all non-retired orderset resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllOrderSets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "orderset response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderset/{uuid}": {
      "get": {
        "tags": [
          "orderset"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getOrderSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "orderset response",
            "schema": {
              "$ref": "#/definitions/OrdersetGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "orderset"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteOrderSet",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptreferenceterm": {
      "get": {
        "tags": [
          "conceptreferenceterm"
        ],
        "summary": "Fetch all non-retired conceptreferenceterm resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptReferenceTerms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "codeOrName",
            "in": "query",
            "description": "Must be used with ",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchType",
            "in": "query",
            "description": "Must be used with ",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "description": "Must be used with ",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptreferenceterm response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptreferenceterm/{uuid}": {
      "get": {
        "tags": [
          "conceptreferenceterm"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptReferenceTerm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptreferenceterm response",
            "schema": {
              "$ref": "#/definitions/ConceptreferencetermGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptreferenceterm"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptReferenceTerm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/ordertype": {
      "get": {
        "tags": [
          "ordertype"
        ],
        "summary": "Fetch all non-retired ordertype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllOrderTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ordertype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/ordertype/{uuid}": {
      "get": {
        "tags": [
          "ordertype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getOrderType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ordertype response",
            "schema": {
              "$ref": "#/definitions/OrdertypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "ordertype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteOrderType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/taskaction/{uuid}": {
      "get": {
        "tags": [
          "taskaction"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getTaskAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "taskaction response",
            "schema": {
              "$ref": "#/definitions/TaskactionGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/field": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Fetch all non-retired field resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllFields",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "field response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/field/{uuid}": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "field response",
            "schema": {
              "$ref": "#/definitions/FieldGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "field"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointmentrequest": {
      "get": {
        "tags": [
          "appointmentschedulingAppointmentrequest"
        ],
        "summary": "Fetch all non-retired appointmentscheduling/appointmentrequest resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllAppointmentRequests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointmentrequest response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointmentrequest/{uuid}": {
      "get": {
        "tags": [
          "appointmentschedulingAppointmentrequest"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getAppointmentRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointmentrequest response",
            "schema": {
              "$ref": "#/definitions/AppointmentschedulingAppointmentrequestGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "appointmentschedulingAppointmentrequest"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteAppointmentRequest",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/provider": {
      "get": {
        "tags": [
          "provider"
        ],
        "summary": "Fetch all non-retired provider resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllProviders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "provider response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/provider/{uuid}": {
      "get": {
        "tags": [
          "provider"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getProvider",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "provider response",
            "schema": {
              "$ref": "#/definitions/ProviderGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "provider"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteProvider",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/timeslot": {
      "get": {
        "tags": [
          "appointmentschedulingTimeslot"
        ],
        "summary": "Fetch all non-retired appointmentscheduling/timeslot resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllTimeSlots",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/timeslot response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/timeslot/{uuid}": {
      "get": {
        "tags": [
          "appointmentschedulingTimeslot"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getTimeSlot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/timeslot response",
            "schema": {
              "$ref": "#/definitions/AppointmentschedulingTimeslotGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "appointmentschedulingTimeslot"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteTimeSlot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptclass": {
      "get": {
        "tags": [
          "conceptclass"
        ],
        "summary": "Fetch all non-retired conceptclass resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllConceptClasses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptclass response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptclass/{uuid}": {
      "get": {
        "tags": [
          "conceptclass"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptClass",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptclass response",
            "schema": {
              "$ref": "#/definitions/ConceptclassGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptclass"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptClass",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/cohort": {
      "get": {
        "tags": [
          "cohort"
        ],
        "summary": "Fetch all non-retired cohort resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllCohorts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "cohort response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/cohort/{uuid}": {
      "get": {
        "tags": [
          "cohort"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getCohort",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "cohort response",
            "schema": {
              "$ref": "#/definitions/CohortGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "cohort"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteCohort",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/locationattributetype": {
      "get": {
        "tags": [
          "locationattributetype"
        ],
        "summary": "Fetch all non-retired locationattributetype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllLocationAttributeTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "locationattributetype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/locationattributetype/{uuid}": {
      "get": {
        "tags": [
          "locationattributetype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getLocationAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "locationattributetype response",
            "schema": {
              "$ref": "#/definitions/LocationattributetypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "locationattributetype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteLocationAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/idgen/identifiersource": {
      "get": {
        "tags": [
          "idgenIdentifiersource"
        ],
        "summary": "Fetch all non-retired idgen/identifiersource resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllIdentifierSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "idgen/identifiersource response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/idgen/identifiersource/{uuid}": {
      "get": {
        "tags": [
          "idgenIdentifiersource"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getIdentifierSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "idgen/identifiersource response",
            "schema": {
              "$ref": "#/definitions/IdgenIdentifiersourceGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "idgenIdentifiersource"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteIdentifierSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Search for order",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllOrders",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "order response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/order/{uuid}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "order response",
            "schema": {
              "$ref": "#/definitions/OrderGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointment": {
      "get": {
        "tags": [
          "appointmentschedulingAppointment"
        ],
        "summary": "Fetch all non-retired appointmentscheduling/appointment resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllAppointments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointment response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/appointmentscheduling/appointment/{uuid}": {
      "get": {
        "tags": [
          "appointmentschedulingAppointment"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getAppointment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "appointmentscheduling/appointment response",
            "schema": {
              "$ref": "#/definitions/AppointmentschedulingAppointmentGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "appointmentschedulingAppointment"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteAppointment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Search for person",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllPersons",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "person response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/person/{uuid}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getPerson",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "person response",
            "schema": {
              "$ref": "#/definitions/PersonGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePerson",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/conceptreferencetermmap": {
      "get": {
        "tags": [
          "conceptreferencetermmap"
        ],
        "summary": "Search for conceptreferencetermmap",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllConceptReferenceTermMaps",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maps",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "termB",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "termA",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "maptype",
            "in": "query",
            "description": "Must be used with maps",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptreferencetermmap response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/conceptreferencetermmap/{uuid}": {
      "get": {
        "tags": [
          "conceptreferencetermmap"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getConceptReferenceTermMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "conceptreferencetermmap response",
            "schema": {
              "$ref": "#/definitions/ConceptreferencetermmapGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "conceptreferencetermmap"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptReferenceTermMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/extension": {
      "get": {
        "tags": [
          "extension"
        ],
        "summary": "Search for extension",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllExtensions",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "extension response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/extension/{uuid}": {
      "get": {
        "tags": [
          "extension"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getExtension",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "extension response",
            "schema": {
              "$ref": "#/definitions/ExtensionGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/obs": {
      "get": {
        "tags": [
          "obs"
        ],
        "summary": "Search for obs",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllObses",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "concepts",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          },
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "conceptList",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "concept",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          },
          {
            "name": "groupingConcepts",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          },
          {
            "name": "answers",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "obs response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/obs/{uuid}": {
      "get": {
        "tags": [
          "obs"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getObs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "obs response",
            "schema": {
              "$ref": "#/definitions/ObsGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "obs"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteObs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/locationtag": {
      "get": {
        "tags": [
          "locationtag"
        ],
        "summary": "Fetch all non-retired locationtag resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllLocationTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "locationtag response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/locationtag/{uuid}": {
      "get": {
        "tags": [
          "locationtag"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getLocationTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "locationtag response",
            "schema": {
              "$ref": "#/definitions/LocationtagGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "locationtag"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteLocationTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/relationship": {
      "get": {
        "tags": [
          "relationship"
        ],
        "summary": "Fetch all non-retired relationship resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllRelationships",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "personB",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "personA",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "person",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relation",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "relatedPerson",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "relationship response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/relationship/{uuid}": {
      "get": {
        "tags": [
          "relationship"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "relationship response",
            "schema": {
              "$ref": "#/definitions/RelationshipGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "relationship"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteRelationship",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch all non-retired user resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/user/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user response",
            "schema": {
              "$ref": "#/definitions/UserGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/providerattributetype": {
      "get": {
        "tags": [
          "providerattributetype"
        ],
        "summary": "Fetch all non-retired providerattributetype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllProviderAttributeTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "providerattributetype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/providerattributetype/{uuid}": {
      "get": {
        "tags": [
          "providerattributetype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getProviderAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "providerattributetype response",
            "schema": {
              "$ref": "#/definitions/ProviderattributetypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "providerattributetype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteProviderAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/personimage": {
      "get": {
        "tags": [
          "personimage"
        ],
        "summary": "Search for personimage",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllPersonImages",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personimage response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/personimage/{uuid}": {
      "get": {
        "tags": [
          "personimage"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getPersonImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "personimage response",
            "schema": {
              "$ref": "#/definitions/PersonimageGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "personimage"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePersonImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patientprofile": {
      "get": {
        "tags": [
          "patientprofile"
        ],
        "summary": "Search for patientprofile",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllPatientProfiles",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "patientprofile response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/drug": {
      "get": {
        "tags": [
          "drug"
        ],
        "summary": "Fetch all non-retired drug resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllDrugs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Must be used with source",
            "required": false,
            "type": "string"
          },
          {
            "name": "preferredMapTypes",
            "in": "query",
            "description": "Must be used with source",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Must be used with q",
            "required": false,
            "type": "string"
          },
          {
            "name": "exactLocale",
            "in": "query",
            "description": "Must be used with q",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "drug response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/drug/{uuid}": {
      "get": {
        "tags": [
          "drug"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getDrug",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "drug response",
            "schema": {
              "$ref": "#/definitions/DrugGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "drug"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteDrug",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/role": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Fetch all non-retired role resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "role response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/role/{uuid}": {
      "get": {
        "tags": [
          "role"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "role response",
            "schema": {
              "$ref": "#/definitions/RoleGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "role"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/chartSearchPreference/{uuid}": {
      "get": {
        "tags": [
          "chartSearchPreference"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getChartSearchPreference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "chartSearchPreference response",
            "schema": {
              "$ref": "#/definitions/ChartSearchPreferenceGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "chartSearchPreference"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteChartSearchPreference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visitattributetype": {
      "get": {
        "tags": [
          "visitattributetype"
        ],
        "summary": "Fetch all non-retired visitattributetype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllVisitAttributeTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "visitattributetype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visitattributetype/{uuid}": {
      "get": {
        "tags": [
          "visitattributetype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getVisitAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "visitattributetype response",
            "schema": {
              "$ref": "#/definitions/VisitattributetypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "visitattributetype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteVisitAttributeType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderable": {
      "get": {
        "tags": [
          "orderable"
        ],
        "summary": "Search for orderable",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllOrderables",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "orderable response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/chartsearchnote": {
      "get": {
        "tags": [
          "chartsearchnote"
        ],
        "summary": "Search for chartsearchnote",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllChartSearchNotes",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "chartsearchnote response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/chartsearchnote/{uuid}": {
      "get": {
        "tags": [
          "chartsearchnote"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getChartSearchNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "chartsearchnote response",
            "schema": {
              "$ref": "#/definitions/ChartsearchnoteGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "chartsearchnote"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteChartSearchNote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encounter": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Search for encounter",
        "description": "At least one search parameter must be specified",
        "operationId": "getAllEncounters",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "obsConcept",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "obsValues",
            "in": "query",
            "description": "Must be used with patient and obsConcept",
            "required": false,
            "type": "string"
          },
          {
            "name": "todate",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          },
          {
            "name": "patient",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "encounterType",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromdate",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Must be used with patient",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "encounter response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          }
        }
      }
    },
    "/encounter/{uuid}": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getEncounter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "encounter response",
            "schema": {
              "$ref": "#/definitions/EncounterGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "encounter"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteEncounter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderfrequency": {
      "get": {
        "tags": [
          "orderfrequency"
        ],
        "summary": "Fetch all non-retired orderfrequency resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllOrderFrequencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "orderfrequency response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderfrequency/{uuid}": {
      "get": {
        "tags": [
          "orderfrequency"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getOrderFrequency",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "orderfrequency response",
            "schema": {
              "$ref": "#/definitions/OrderfrequencyGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "orderfrequency"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteOrderFrequency",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patientidentifiertype": {
      "get": {
        "tags": [
          "patientidentifiertype"
        ],
        "summary": "Fetch all non-retired patientidentifiertype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllPatientIdentifierTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "patientidentifiertype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patientidentifiertype/{uuid}": {
      "get": {
        "tags": [
          "patientidentifiertype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getPatientIdentifierType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "patientidentifiertype response",
            "schema": {
              "$ref": "#/definitions/PatientidentifiertypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "patientidentifiertype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePatientIdentifierType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/relationshiptype": {
      "get": {
        "tags": [
          "relationshiptype"
        ],
        "summary": "Fetch all non-retired relationshiptype resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllRelationShipTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "relationshiptype response",
            "schema": {
              "$ref": "#/definitions/FetchAll"
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/relationshiptype/{uuid}": {
      "get": {
        "tags": [
          "relationshiptype"
        ],
        "summary": "Fetch by uuid",
        "operationId": "getRelationShipType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "relationshiptype response",
            "schema": {
              "$ref": "#/definitions/RelationshiptypeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "relationshiptype"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteRelationShipType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/resource": {
      "get": {
        "tags": [
          "form"
        ],
        "summary": "Fetch all non-retired resource subresources",
        "operationId": "getAllFormResources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "resource response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FormResourceGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/resource/{uuid}": {
      "get": {
        "tags": [
          "form"
        ],
        "summary": "Fetch resource subresources by uuid",
        "operationId": "getFormResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "resource response",
            "schema": {
              "$ref": "#/definitions/FormResourceGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "form"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteFormResource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/location/{parent-uuid}/attribute": {
      "get": {
        "tags": [
          "location"
        ],
        "summary": "Fetch all non-retired attribute resources or perform search",
        "description": "All search parameters are optional",
        "operationId": "getAllLocationAttributes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LocationAttributeGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/location/{parent-uuid}/attribute/{uuid}": {
      "get": {
        "tags": [
          "location"
        ],
        "summary": "Fetch attribute subresources by uuid",
        "operationId": "getLocationAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "$ref": "#/definitions/LocationAttributeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "location"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteLocationAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/allergy/{uuid}": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Fetch allergy subresources by uuid",
        "operationId": "getPatientAllergy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "allergy response",
            "schema": {
              "$ref": "#/definitions/PatientAllergyGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "patient"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePatientAllergy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/cohort/{parent-uuid}/membership": {
      "get": {
        "tags": [
          "cohort"
        ],
        "summary": "Fetch all non-retired membership subresources",
        "operationId": "getAllCohortMemberships",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "membership response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CohortMembershipGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/cohort/{parent-uuid}/membership/{uuid}": {
      "get": {
        "tags": [
          "cohort"
        ],
        "summary": "Fetch membership subresources by uuid",
        "operationId": "getCohortMembership",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "membership response",
            "schema": {
              "$ref": "#/definitions/CohortMembershipGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "cohort"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteCohortMembership",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/mapping": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch all non-retired mapping subresources",
        "operationId": "getAllConceptMaps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "mapping response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConceptMappingGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/mapping/{uuid}": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch mapping subresources by uuid",
        "operationId": "getConceptMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "mapping response",
            "schema": {
              "$ref": "#/definitions/ConceptMappingGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "concept"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/formfield": {
      "get": {
        "tags": [
          "form"
        ],
        "summary": "Fetch all non-retired formfield subresources",
        "operationId": "getAllFormFields",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "formfield response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FormFormfieldGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/form/{parent-uuid}/formfield/{uuid}": {
      "get": {
        "tags": [
          "form"
        ],
        "summary": "Fetch formfield subresources by uuid",
        "operationId": "getFormField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "formfield response",
            "schema": {
              "$ref": "#/definitions/FormFormfieldGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "form"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteFormField",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/address": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch all non-retired address subresources",
        "operationId": "getAllPersonAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "address response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonAddressGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/address/{uuid}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch address subresources by uuid",
        "operationId": "getPersonAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "address response",
            "schema": {
              "$ref": "#/definitions/PersonAddressGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePersonAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/customdatatype/{parent-uuid}/handlers": {
      "get": {
        "tags": [
          "customdatatype"
        ],
        "summary": "Fetch all non-retired handlers subresources",
        "operationId": "getAllCustomDatatypeHandlers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "handlers response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomdatatypeHandlersGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/attribute": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch all non-retired attribute subresources",
        "operationId": "getAllConceptAttributes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConceptAttributeGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/attribute/{uuid}": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch attribute subresources by uuid",
        "operationId": "getConceptAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "$ref": "#/definitions/ConceptAttributeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "concept"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/attribute": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch all non-retired attribute subresources",
        "operationId": "getAllPersonAttributes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonAttributeGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/attribute/{uuid}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch attribute subresources by uuid",
        "operationId": "getPersonAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "$ref": "#/definitions/PersonAttributeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePersonAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/name": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch all non-retired name subresources",
        "operationId": "getAllPersonNames",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "name response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PersonNameGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/person/{parent-uuid}/name/{uuid}": {
      "get": {
        "tags": [
          "person"
        ],
        "summary": "Fetch name subresources by uuid",
        "operationId": "getPersonName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "name response",
            "schema": {
              "$ref": "#/definitions/PersonNameGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "person"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePersonName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/drug/{parent-uuid}/ingredient": {
      "get": {
        "tags": [
          "drug"
        ],
        "summary": "Fetch all non-retired ingredient subresources",
        "operationId": "getAllDrugIngredients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "ingredient response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DrugIngredientGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/drug/{parent-uuid}/ingredient/{uuid}": {
      "get": {
        "tags": [
          "drug"
        ],
        "summary": "Fetch ingredient subresources by uuid",
        "operationId": "getDrugIngredient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "ingredient response",
            "schema": {
              "$ref": "#/definitions/DrugIngredientGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "drug"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteDrugIngredient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visit/{parent-uuid}/attribute": {
      "get": {
        "tags": [
          "visit"
        ],
        "summary": "Fetch all non-retired attribute subresources",
        "operationId": "getAllVisitAttributes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VisitAttributeGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/visit/{parent-uuid}/attribute/{uuid}": {
      "get": {
        "tags": [
          "visit"
        ],
        "summary": "Fetch attribute subresources by uuid",
        "operationId": "getVisitAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "$ref": "#/definitions/VisitAttributeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "visit"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteVisitAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/identifier": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Fetch all non-retired identifier subresources",
        "operationId": "getAllPatientIdentifiers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "identifier response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientIdentifierGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/patient/{parent-uuid}/identifier/{uuid}": {
      "get": {
        "tags": [
          "patient"
        ],
        "summary": "Fetch identifier subresources by uuid",
        "operationId": "getPatientIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "identifier response",
            "schema": {
              "$ref": "#/definitions/PatientIdentifierGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "patient"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deletePatientIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderset/{parent-uuid}/ordersetmember": {
      "get": {
        "tags": [
          "orderset"
        ],
        "summary": "Fetch all non-retired ordersetmember subresources",
        "operationId": "getAllOrderSetMembers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "ordersetmember response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrdersetOrdersetmemberGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/orderset/{parent-uuid}/ordersetmember/{uuid}": {
      "get": {
        "tags": [
          "orderset"
        ],
        "summary": "Fetch ordersetmember subresources by uuid",
        "operationId": "getOrderSetMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "ordersetmember response",
            "schema": {
              "$ref": "#/definitions/OrdersetOrdersetmemberGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "orderset"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteOrderSetMember",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/name": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch all non-retired name subresources",
        "operationId": "getAllConceptNames",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "name response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConceptNameGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/name/{uuid}": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch name subresources by uuid",
        "operationId": "getConceptName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "name response",
            "schema": {
              "$ref": "#/definitions/ConceptNameGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "concept"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptName",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/field/{parent-uuid}/answer": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Fetch all non-retired answer subresources",
        "operationId": "getAllFieldAnswers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "answer response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FieldAnswerGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/field/{parent-uuid}/answer/{uuid}": {
      "get": {
        "tags": [
          "field"
        ],
        "summary": "Fetch answer subresources by uuid",
        "operationId": "getFieldAnswer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "answer response",
            "schema": {
              "$ref": "#/definitions/FieldAnswerGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "field"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteFieldAnswer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/provider/{parent-uuid}/attribute": {
      "get": {
        "tags": [
          "provider"
        ],
        "summary": "Fetch all non-retired attribute subresources",
        "operationId": "getAllProviderAttributes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ProviderAttributeGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/provider/{parent-uuid}/attribute/{uuid}": {
      "get": {
        "tags": [
          "provider"
        ],
        "summary": "Fetch attribute subresources by uuid",
        "operationId": "getProviderAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "attribute response",
            "schema": {
              "$ref": "#/definitions/ProviderAttributeGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "provider"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteProviderAttribute",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encounter/{parent-uuid}/encounterprovider": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Fetch all non-retired encounterprovider subresources",
        "operationId": "getAllEncounterProviders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "encounterprovider response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EncounterEncounterproviderGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/encounter/{parent-uuid}/encounterprovider/{uuid}": {
      "get": {
        "tags": [
          "encounter"
        ],
        "summary": "Fetch encounterprovider subresources by uuid",
        "operationId": "getEncounterProvider",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "encounterprovider response",
            "schema": {
              "$ref": "#/definitions/EncounterEncounterproviderGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "encounter"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteEncounterProvider",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/description": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch all non-retired description subresources",
        "operationId": "getAllConceptDescriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The number of results to return",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "The offset at which to start",
            "required": false,
            "type": "integer"
          },
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "description response",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConceptDescriptionGet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    },
    "/concept/{parent-uuid}/description/{uuid}": {
      "get": {
        "tags": [
          "concept"
        ],
        "summary": "Fetch description subresources by uuid",
        "operationId": "getConceptDescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to filter by",
            "required": true,
            "type": "string"
          },
          {
            "name": "v",
            "in": "query",
            "description": "The representation to return (ref, default, full or custom)",
            "required": false,
            "type": "string",
            "enum": [
              "ref",
              "default",
              "full",
              "custom"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "description response",
            "schema": {
              "$ref": "#/definitions/ConceptDescriptionGet"
            }
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      },
      "delete": {
        "tags": [
          "concept"
        ],
        "summary": "Delete or purge resource by uuid",
        "description": "The resource will be voided/retired unless purge = 'true'",
        "operationId": "deleteConceptDescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent-uuid",
            "in": "path",
            "description": "parent resource uuid",
            "required": true,
            "type": "string"
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "uuid to delete",
            "required": true,
            "type": "string"
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete successful"
          },
          "404": {
            "description": "Resource with given uuid doesn't exist"
          },
          "401": {
            "description": "User not logged in"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basic_auth": {
      "type": "basic"
    }
  },
  "definitions": {
    "ConceptGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/ConceptNameGet"
        },
        "datatype": {
          "$ref": "#/definitions/ConceptdatatypeGetRef"
        },
        "conceptClass": {
          "$ref": "#/definitions/ConceptclassGetRef"
        },
        "set": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptNameGetRef"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptDescriptionGetRef"
          }
        },
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMappingGetRef"
          }
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "setMembers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ConceptGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptCreate": {
      "required": [
        "conceptClass",
        "datatype",
        "names"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptNameCreate"
          }
        },
        "datatype": {
          "type": "string",
          "example": "uuid"
        },
        "set": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        },
        "setMembers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        },
        "hiNormal": {
          "type": "string"
        },
        "hiAbsolute": {
          "type": "string"
        },
        "hiCritical": {
          "type": "string"
        },
        "lowNormal": {
          "type": "string"
        },
        "lowAbsolute": {
          "type": "string"
        },
        "lowCritical": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "allowDecimal": {
          "type": "string"
        },
        "displayPrecision": {
          "type": "string"
        },
        "conceptClass": {
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mappings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConceptCreateFull": {
      "required": [
        "conceptClass",
        "datatype",
        "names"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptNameCreate"
          }
        },
        "datatype": {
          "type": "string",
          "example": "uuid"
        },
        "set": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        },
        "setMembers": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        },
        "hiNormal": {
          "type": "string"
        },
        "hiAbsolute": {
          "type": "string"
        },
        "hiCritical": {
          "type": "string"
        },
        "lowNormal": {
          "type": "string"
        },
        "lowAbsolute": {
          "type": "string"
        },
        "lowCritical": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "allowDecimal": {
          "type": "string"
        },
        "displayPrecision": {
          "type": "string"
        },
        "conceptClass": {
          "$ref": "#/definitions/ConceptclassCreate"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptDescriptionCreate"
          }
        },
        "mappings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptMappingCreate"
          }
        }
      }
    },
    "ConceptUpdate": {
      "properties": {
        "name": {
          "$ref": "#/definitions/ConceptNameCreate"
        },
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptNameCreate"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptDescriptionCreate"
          }
        }
      }
    },
    "FieldtypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "isSet": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "FieldtypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "FieldtypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "isSet": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "FieldtypeCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "FieldtypeCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "FieldtypeUpdate": {},
    "CustomdatatypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "handlers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomdatatypeHandlersGetRef"
          }
        }
      }
    },
    "CustomdatatypeGetRef": {
      "properties": {}
    },
    "CustomdatatypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "handlers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomdatatypeHandlersGet"
          }
        }
      }
    },
    "EncounterroleGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "EncounterroleGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "EncounterroleGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "EncounterroleCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EncounterroleCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EncounterroleUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ConceptdatatypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hl7Abbreviation": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ConceptdatatypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptdatatypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "hl7Abbreviation": {
          "type": "string"
        }
      }
    },
    "ConceptstopwordGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "ConceptstopwordGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptstopwordGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "ConceptstopwordCreate": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "ConceptstopwordCreateFull": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "ConceptstopwordUpdate": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "VisittypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "VisittypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "VisittypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "VisittypeCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "VisittypeCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "VisittypeUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "IdgenAutogenerationoptionGet": {
      "properties": {}
    },
    "IdgenAutogenerationoptionGetRef": {
      "properties": {}
    },
    "IdgenAutogenerationoptionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "Hl7sourceCreate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Hl7sourceCreateFull": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Hl7sourceGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "Hl7sourceGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "Hl7sourceGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "Hl7sourceUpdate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ProgramGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "allWorkflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowGetRef"
          }
        }
      }
    },
    "ProgramGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "allWorkflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowGetRef"
          }
        }
      }
    },
    "ProgramGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "allWorkflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowGet"
          }
        }
      }
    },
    "ProgramCreate": {
      "required": [
        "concept",
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "retired": {
          "type": "boolean"
        },
        "outcomesConcept": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "ProgramCreateFull": {
      "required": [
        "concept",
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "retired": {
          "type": "boolean"
        },
        "outcomesConcept": {
          "$ref": "#/definitions/ConceptCreate"
        }
      }
    },
    "ProgramUpdate": {},
    "VisitGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "startDatetime": {
          "type": "string",
          "format": "date"
        },
        "stopDatetime": {
          "type": "string",
          "format": "date"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "voided": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/PatientGetRef"
        },
        "visitType": {
          "$ref": "#/definitions/VisittypeGetRef"
        },
        "indication": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "location": {
          "$ref": "#/definitions/LocationGetRef"
        },
        "encounters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterGetRef"
          }
        }
      }
    },
    "VisitGetRef": {
      "properties": {}
    },
    "VisitGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "startDatetime": {
          "type": "string",
          "format": "date"
        },
        "stopDatetime": {
          "type": "string",
          "format": "date"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "voided": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/PatientGet"
        },
        "visitType": {
          "$ref": "#/definitions/VisittypeGet"
        },
        "indication": {
          "$ref": "#/definitions/ConceptGet"
        },
        "location": {
          "$ref": "#/definitions/LocationGet"
        },
        "encounters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterGet"
          }
        }
      }
    },
    "VisitCreate": {
      "required": [
        "patient",
        "visitType"
      ],
      "properties": {
        "patient": {
          "type": "string",
          "example": "uuid"
        },
        "visitType": {
          "type": "string",
          "example": "uuid"
        },
        "startDatetime": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "type": "string",
          "example": "uuid"
        },
        "indication": {
          "type": "string"
        },
        "stopDatetime": {
          "type": "string",
          "format": "date"
        },
        "encounters": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitAttributeCreate"
          }
        }
      }
    },
    "VisitCreateFull": {
      "required": [
        "patient",
        "visitType"
      ],
      "properties": {
        "patient": {
          "$ref": "#/definitions/PatientCreate"
        },
        "visitType": {
          "$ref": "#/definitions/VisittypeCreate"
        },
        "startDatetime": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "indication": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "stopDatetime": {
          "type": "string",
          "format": "date"
        },
        "encounters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterCreate"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VisitAttributeCreate"
          }
        }
      }
    },
    "VisitUpdate": {
      "properties": {
        "visitType": {
          "$ref": "#/definitions/VisittypeCreate"
        },
        "startDatetime": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "indication": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "stopDatetime": {
          "type": "string",
          "format": "date"
        },
        "encounters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EncounterCreate"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReportingrestCohortDefinitionGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ReportingrestCohortDefinitionGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ReportingrestCohortDefinitionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ReportingrestCohortDefinitionCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ReportingrestCohortDefinitionCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ReportingrestCohortDefinitionUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CaresettingGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "careSettingType": {
          "type": "string",
          "enum": [
            "OUTPATIENT",
            "INPATIENT"
          ]
        }
      }
    },
    "CaresettingGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "CaresettingGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "careSettingType": {
          "type": "string",
          "enum": [
            "OUTPATIENT",
            "INPATIENT"
          ]
        }
      }
    },
    "EncountertypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "EncountertypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "EncountertypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "EncountertypeCreate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EncountertypeCreateFull": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EncountertypeUpdate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PatientCreate": {
      "required": [
        "identifiers",
        "person"
      ],
      "properties": {
        "person": {
          "type": "string",
          "example": "uuid"
        },
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientIdentifierCreate"
          }
        }
      }
    },
    "PatientCreateFull": {
      "required": [
        "identifiers",
        "person"
      ],
      "properties": {
        "person": {
          "$ref": "#/definitions/PersonCreate"
        },
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientIdentifierCreate"
          }
        }
      }
    },
    "PatientGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientIdentifierGetRef"
          }
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "voided": {
          "type": "boolean"
        },
        "person": {
          "$ref": "#/definitions/PersonGetRef"
        }
      }
    },
    "PatientGetRef": {
      "properties": {}
    },
    "PatientGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatientIdentifierGetRef"
          }
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "voided": {
          "type": "boolean"
        },
        "person": {
          "$ref": "#/definitions/PersonGet"
        }
      }
    },
    "PatientUpdate": {
      "required": [
        "person"
      ],
      "properties": {
        "person": {
          "$ref": "#/definitions/PersonGet"
        }
      }
    },
    "TaskdefinitionGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "TaskdefinitionGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "TaskdefinitionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "TaskdefinitionCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "TaskdefinitionCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "TaskdefinitionUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ConceptmaptypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        }
      }
    },
    "ConceptmaptypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptmaptypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "isHidden": {
          "type": "boolean"
        }
      }
    },
    "ConceptmaptypeCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        }
      }
    },
    "ConceptmaptypeCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        }
      }
    },
    "ConceptmaptypeUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "isHidden": {
          "type": "boolean"
        }
      }
    },
    "ReportingrestReportDefinitionGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ReportingrestReportDefinitionGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ReportingrestReportDefinitionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ReportingrestReportDefinitionCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ReportingrestReportDefinitionCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ReportingrestReportDefinitionUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AppointmentschedulingAppointmenttypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "AppointmentschedulingAppointmenttypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "AppointmentschedulingAppointmenttypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "AppointmentschedulingAppointmenttypeCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AppointmentschedulingAppointmenttypeCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AppointmentschedulingAppointmenttypeUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PrivilegeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "PrivilegeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "PrivilegeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "PrivilegeCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PrivilegeCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PrivilegeUpdate": {
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "ConceptattributetypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        }
      }
    },
    "ConceptattributetypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptattributetypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ConceptattributetypeCreate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ConceptattributetypeCreateFull": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ConceptattributetypeUpdate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ConceptsourceGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hl7Code": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "uniqueId": {
          "type": "string"
        }
      }
    },
    "ConceptsourceGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hl7Code": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ConceptsourceGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "hl7Code": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        }
      }
    },
    "ConceptsourceCreate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hl7Code": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        }
      }
    },
    "ConceptsourceCreateFull": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hl7Code": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        }
      }
    },
    "ConceptsourceUpdate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "hl7Code": {
          "type": "string"
        },
        "uniqueId": {
          "type": "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ReportingrestDataSetDefinitionCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ReportingrestDataSetDefinitionUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AppointmentschedulingAppointmentblockGet": {
      "properties": {}
    },
    "AppointmentschedulingAppointmentblockGetRef": {
      "properties": {}
    },
    "AppointmentschedulingAppointmentblockGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "SystemsettingGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "property": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "SystemsettingGetRef": {
      "properties": {}
    },
    "SystemsettingGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "property": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "SystemsettingCreate": {
      "required": [
        "property"
      ],
      "properties": {
        "property": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SystemsettingCreateFull": {
      "required": [
        "property"
      ],
      "properties": {
        "property": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "SystemsettingUpdate": {
      "properties": {
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProgramenrollmentCreate": {
      "required": [
        "dateEnrolled",
        "patient",
        "program"
      ],
      "properties": {
        "patient": {
          "type": "string",
          "example": "uuid"
        },
        "program": {
          "type": "string",
          "example": "uuid"
        },
        "dateEnrolled": {
          "type": "string",
          "format": "date"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "type": "string",
          "example": "uuid"
        },
        "voided": {
          "type": "boolean"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramenrollmentStateCreate"
          }
        },
        "outcome": {
          "$ref": "#/definitions/ConceptCreate"
        }
      }
    },
    "ProgramenrollmentCreateFull": {
      "required": [
        "dateEnrolled",
        "patient",
        "program"
      ],
      "properties": {
        "patient": {
          "$ref": "#/definitions/PatientCreate"
        },
        "program": {
          "$ref": "#/definitions/ProgramCreate"
        },
        "dateEnrolled": {
          "type": "string",
          "format": "date"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "voided": {
          "type": "boolean"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramenrollmentStateCreate"
          }
        },
        "outcome": {
          "$ref": "#/definitions/ConceptCreate"
        }
      }
    },
    "ProgramenrollmentGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "dateEnrolled": {
          "type": "string",
          "format": "date"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date"
        },
        "voided": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/PatientGetRef"
        },
        "program": {
          "$ref": "#/definitions/ProgramGetRef"
        },
        "location": {
          "$ref": "#/definitions/LocationGetRef"
        }
      }
    },
    "ProgramenrollmentGetRef": {
      "properties": {}
    },
    "ProgramenrollmentGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "dateEnrolled": {
          "type": "string",
          "format": "date"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date"
        },
        "voided": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/PatientGet"
        },
        "program": {
          "$ref": "#/definitions/ProgramGet"
        },
        "location": {
          "$ref": "#/definitions/LocationGet"
        }
      }
    },
    "ProgramenrollmentUpdate": {
      "required": [
        "dateEnrolled"
      ],
      "properties": {
        "dateEnrolled": {
          "type": "string",
          "format": "date"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramenrollmentStateCreate"
          }
        },
        "outcome": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "voided": {
          "type": "boolean"
        },
        "dateCompleted": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "AppGet": {
      "properties": {}
    },
    "AppGetRef": {
      "properties": {}
    },
    "AppGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "FormGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "build": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "boolean",
          "default": false
        },
        "retired": {
          "type": "boolean"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeGetRef"
        },
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFormfieldGetRef"
          }
        }
      }
    },
    "FormGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "FormGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "build": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "boolean",
          "default": false
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeGet"
        },
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFormfieldGet"
          }
        }
      }
    },
    "FormCreate": {
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "encounterType": {
          "type": "string"
        },
        "build": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "boolean",
          "default": false
        },
        "formFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "xslt": {
          "type": "string"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "FormCreateFull": {
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeCreate"
        },
        "build": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "boolean",
          "default": false
        },
        "formFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormFormfieldCreate"
          }
        },
        "xslt": {
          "type": "string"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "FormUpdate": {
      "required": [
        "name",
        "version"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "encounterType": {
          "type": "string"
        },
        "build": {
          "type": "integer",
          "format": "int32"
        },
        "published": {
          "type": "boolean",
          "default": false
        },
        "formFields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "xslt": {
          "type": "string"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "PersonattributetypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "foreignKey": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "number",
          "format": "double"
        },
        "searchable": {
          "type": "boolean",
          "default": false
        },
        "editPrivilege": {
          "$ref": "#/definitions/PrivilegeGetRef"
        }
      }
    },
    "PersonattributetypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "PersonattributetypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "format": {
          "type": "string"
        },
        "foreignKey": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "number",
          "format": "double"
        },
        "searchable": {
          "type": "boolean",
          "default": false
        },
        "editPrivilege": {
          "$ref": "#/definitions/PrivilegeGet"
        },
        "concept": {
          "type": "string"
        }
      }
    },
    "PersonattributetypeCreate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "example": "java.lang.String"
        },
        "foreignKey": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "number",
          "format": "double"
        },
        "searchable": {
          "type": "boolean",
          "default": false
        },
        "editPrivilege": {
          "$ref": "#/definitions/PrivilegeCreate"
        }
      }
    },
    "PersonattributetypeCreateFull": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "example": "java.lang.String"
        },
        "foreignKey": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "number",
          "format": "double"
        },
        "searchable": {
          "type": "boolean",
          "default": false
        },
        "editPrivilege": {
          "$ref": "#/definitions/PrivilegeCreate"
        }
      }
    },
    "PersonattributetypeUpdate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string",
          "example": "java.lang.String"
        },
        "foreignKey": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "number",
          "format": "double"
        },
        "searchable": {
          "type": "boolean",
          "default": false
        },
        "editPrivilege": {
          "$ref": "#/definitions/PrivilegeCreate"
        }
      }
    },
    "LocationGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationtagGetRef"
          }
        },
        "parentLocation": {
          "$ref": "#/definitions/LocationGetRef"
        },
        "childLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationGetRef"
          }
        }
      }
    },
    "LocationGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "LocationGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationtagGet"
          }
        },
        "parentLocation": {
          "$ref": "#/definitions/LocationGet"
        },
        "childLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationGet"
          }
        }
      }
    },
    "LocationCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentLocation": {
          "type": "string"
        },
        "childLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LocationCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentLocation": {
          "type": "string"
        },
        "childLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LocationUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parentLocation": {
          "type": "string"
        },
        "childLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OrdersetGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "ALL",
            "ONE",
            "ANY"
          ]
        },
        "orderSetMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrdersetOrdersetmemberGetRef"
          }
        }
      }
    },
    "OrdersetGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "OrdersetGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "operator": {
          "type": "string",
          "enum": [
            "ALL",
            "ONE",
            "ANY"
          ]
        },
        "orderSetMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrdersetOrdersetmemberGet"
          }
        }
      }
    },
    "OrdersetCreate": {
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "ALL",
            "ONE",
            "ANY"
          ]
        },
        "orderSetMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrdersetOrdersetmemberCreate"
          }
        }
      }
    },
    "OrdersetCreateFull": {
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "ALL",
            "ONE",
            "ANY"
          ]
        },
        "orderSetMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrdersetOrdersetmemberCreate"
          }
        }
      }
    },
    "OrdersetUpdate": {
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "ALL",
            "ONE",
            "ANY"
          ]
        },
        "orderSetMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrdersetOrdersetmemberCreate"
          }
        }
      }
    },
    "ReportingrestReportdataGet": {
      "properties": {}
    },
    "ReportingrestReportdataGetRef": {
      "properties": {}
    },
    "ReportingrestReportdataGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ConceptreferencetermGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "conceptSource": {
          "$ref": "#/definitions/ConceptsourceGetRef"
        }
      }
    },
    "ConceptreferencetermGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptreferencetermGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "conceptSource": {
          "$ref": "#/definitions/ConceptsourceGet"
        }
      }
    },
    "ConceptreferencetermCreate": {
      "required": [
        "code",
        "conceptSource",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "conceptSource": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ConceptreferencetermCreateFull": {
      "required": [
        "code",
        "conceptSource",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "conceptSource": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "ConceptreferencetermUpdate": {},
    "OrdertypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "javaClassName": {
          "type": "string"
        },
        "conceptClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptclassGetRef"
          }
        },
        "parent": {
          "$ref": "#/definitions/OrdertypeGetRef"
        }
      }
    },
    "OrdertypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "OrdertypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "javaClassName": {
          "type": "string"
        },
        "conceptClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptclassGet"
          }
        },
        "parent": {
          "$ref": "#/definitions/OrdertypeGet"
        }
      }
    },
    "OrdertypeCreate": {
      "required": [
        "javaClassName",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "javaClassName": {
          "type": "string"
        },
        "parent": {
          "type": "string",
          "example": "uuid"
        },
        "conceptClasses": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        }
      }
    },
    "OrdertypeCreateFull": {
      "required": [
        "javaClassName",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "javaClassName": {
          "type": "string"
        },
        "parent": {
          "type": "string",
          "example": "uuid"
        },
        "conceptClasses": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        }
      }
    },
    "OrdertypeUpdate": {
      "required": [
        "javaClassName",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "javaClassName": {
          "type": "string"
        },
        "parent": {
          "type": "string",
          "example": "uuid"
        },
        "conceptClasses": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "uuid"
          }
        }
      }
    },
    "TaskactionCreate": {
      "required": [
        "action"
      ],
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allTasks": {
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "enum": [
            "SCHEDULETASK",
            "SHUTDOWNTASK",
            "RESCHEDULETASK",
            "RESCHEDULEALLTASKS",
            "DELETE"
          ]
        }
      }
    },
    "TaskactionCreateFull": {
      "required": [
        "action"
      ],
      "properties": {
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allTasks": {
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "enum": [
            "SCHEDULETASK",
            "SHUTDOWNTASK",
            "RESCHEDULETASK",
            "RESCHEDULEALLTASKS",
            "DELETE"
          ]
        }
      }
    },
    "TaskactionGet": {
      "properties": {}
    },
    "TaskactionGetRef": {
      "properties": {}
    },
    "TaskactionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "FieldGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "tableName": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "selectMultiple": {
          "type": "boolean",
          "default": false
        },
        "fieldType": {
          "$ref": "#/definitions/FieldtypeGetRef"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "FieldGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "FieldGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "tableName": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "selectMultiple": {
          "type": "boolean",
          "default": false
        },
        "fieldType": {
          "$ref": "#/definitions/FieldtypeGet"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        }
      }
    },
    "FieldCreate": {
      "required": [
        "fieldType",
        "name",
        "selectMultiple"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/FieldtypeCreate"
        },
        "selectMultiple": {
          "type": "boolean",
          "default": false
        },
        "concept": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "tableName": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        }
      }
    },
    "FieldCreateFull": {
      "required": [
        "fieldType",
        "name",
        "selectMultiple"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fieldType": {
          "$ref": "#/definitions/FieldtypeCreate"
        },
        "selectMultiple": {
          "type": "boolean",
          "default": false
        },
        "concept": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "tableName": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        }
      }
    },
    "FieldUpdate": {},
    "AppointmentschedulingAppointmentrequestGet": {
      "properties": {}
    },
    "AppointmentschedulingAppointmentrequestGetRef": {
      "properties": {}
    },
    "AppointmentschedulingAppointmentrequestGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ReportingrestDataSetGet": {
      "properties": {}
    },
    "ReportingrestDataSetGetRef": {
      "properties": {}
    },
    "ReportingrestDataSetGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ProviderGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/PersonGetRef"
        },
        "identifier": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderAttributeGetRef"
          }
        },
        "preferredHandlerClassname": {
          "type": "string"
        }
      }
    },
    "ProviderGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ProviderGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "person": {
          "$ref": "#/definitions/PersonGet"
        },
        "identifier": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderAttributeGet"
          }
        },
        "preferredHandlerClassname": {
          "type": "string"
        }
      }
    },
    "ProviderCreate": {
      "required": [
        "identifier",
        "name",
        "person"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "person": {
          "type": "string",
          "example": "uuid"
        },
        "identifier": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderAttributeCreate"
          }
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ProviderCreateFull": {
      "required": [
        "identifier",
        "name",
        "person"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/PersonCreate"
        },
        "identifier": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderAttributeCreate"
          }
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ProviderUpdate": {
      "required": [
        "identifier",
        "name",
        "person"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "person": {
          "type": "string",
          "example": "uuid"
        },
        "identifier": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProviderAttributeCreate"
          }
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "AppointmentschedulingTimeslotGet": {
      "properties": {}
    },
    "AppointmentschedulingTimeslotGetRef": {
      "properties": {}
    },
    "AppointmentschedulingTimeslotGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ConceptclassGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptclassGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptclassGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ConceptclassCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ConceptclassCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ConceptclassUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "IdgenLogentryGet": {
      "properties": {}
    },
    "IdgenLogentryGetRef": {
      "properties": {}
    },
    "IdgenLogentryGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "CohortGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "voided": {
          "type": "string"
        }
      }
    },
    "CohortGetRef": {
      "properties": {}
    },
    "CohortGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "voided": {
          "type": "string"
        }
      }
    },
    "CohortCreate": {
      "required": [
        "description",
        "memberIds",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "memberIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "CohortCreateFull": {
      "required": [
        "description",
        "memberIds",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "memberIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "CohortUpdate": {
      "required": [
        "description",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "LocationattributetypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        }
      }
    },
    "LocationattributetypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "LocationattributetypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "LocationattributetypeCreate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "LocationattributetypeCreateFull": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "LocationattributetypeUpdate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "IdgenIdentifiersourceGet": {
      "properties": {}
    },
    "IdgenIdentifiersourceGetRef": {
      "properties": {}
    },
    "IdgenIdentifiersourceGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "OrderCreate": {
      "required": [
        "concept",
        "orderType",
        "patient"
      ],
      "properties": {
        "encounter": {
          "type": "string",
          "example": "uuid"
        },
        "orderType": {
          "type": "string",
          "example": "uuid"
        },
        "action": {
          "type": "string",
          "enum": [
            "NEW",
            "REVISE",
            "DISCONTINUE",
            "RENEW"
          ]
        },
        "accessionNumber": {
          "type": "string"
        },
        "dateActivated": {
          "type": "string",
          "format": "date"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date"
        },
        "patient": {
          "type": "string",
          "example": "uuid"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "careSetting": {
          "type": "string",
          "example": "uuid"
        },
        "dateStopped": {
          "type": "string",
          "format": "date"
        },
        "autoExpireDate": {
          "type": "string",
          "format": "date"
        },
        "orderer": {
          "type": "string",
          "example": "uuid"
        },
        "previousOrder": {
          "type": "string",
          "example": "uuid"
        },
        "urgency": {
          "type": "string",
          "enum": [
            "ROUTINE",
            "STAT",
            "ON_SCHEDULED_DATE"
          ]
        },
        "orderReason": {
          "type": "string",
          "example": "uuid"
        },
        "orderReasonNonCoded": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        },
        "commentToFulfiller": {
          "type": "string"
        }
      }
    },
    "OrderCreateFull": {
      "required": [
        "concept",
        "orderType",
        "patient"
      ],
      "properties": {
        "encounter": {
          "$ref": "#/definitions/EncounterCreate"
        },
        "orderType": {
          "type": "string",
          "example": "uuid"
        },
        "action": {
          "type": "string",
          "enum": [
            "NEW",
            "REVISE",
            "DISCONTINUE",
            "RENEW"
          ]
        },
        "accessionNumber": {
          "type": "string"
        },
        "dateActivated": {
          "type": "string",
          "format": "date"
        },
        "scheduledDate": {
          "type": "string",
          "format": "date"
        },
        "patient": {
          "$ref": "#/definitions/PatientCreate"
        },
        "concept": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "careSetting": {
          "type": "string",
          "example": "uuid"
        },
        "dateStopped": {
          "type": "string",
          "format": "date"
        },
        "autoExpireDate": {
          "type": "string",
          "format": "date"
        },
        "orderer": {
          "$ref": "#/definitions/UserCreate"
        },
        "previousOrder": {
          "$ref": "#/definitions/OrderCreate"
        },
        "urgency": {
          "type": "string",
          "enum": [
            "ROUTINE",
            "STAT",
            "ON_SCHEDULED_DATE"
          ]
        },
        "orderReason": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "orderReasonNonCoded": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        },
        "commentToFulfiller": {
          "type": "string"
        }
      }
    },
    "OrderGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "autoExpireDate": {
          "type": "string",
          "format": "date"
        },
        "accessionNumber": {
          "type": "string"
        },
        "discontinuedDate": {
          "type": "string",
          "format": "date"
        },
        "discontinuedReasonNonCoded": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "orderType": {
          "$ref": "#/definitions/OrdertypeGetRef"
        },
        "patient": {
          "$ref": "#/definitions/PatientGetRef"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "encounter": {
          "$ref": "#/definitions/EncounterGetRef"
        },
        "orderer": {
          "$ref": "#/definitions/UserGetRef"
        },
        "discontinuedBy": {
          "$ref": "#/definitions/UserGetRef"
        },
        "discontinuedReason": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "OrderGetRef": {
      "properties": {}
    },
    "OrderGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "autoExpireDate": {
          "type": "string",
          "format": "date"
        },
        "accessionNumber": {
          "type": "string"
        },
        "discontinuedDate": {
          "type": "string",
          "format": "date"
        },
        "discontinuedReasonNonCoded": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "orderType": {
          "$ref": "#/definitions/OrdertypeGet"
        },
        "patient": {
          "$ref": "#/definitions/PatientGet"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "encounter": {
          "$ref": "#/definitions/EncounterGet"
        },
        "orderer": {
          "$ref": "#/definitions/UserGet"
        },
        "discontinuedBy": {
          "$ref": "#/definitions/UserGet"
        },
        "discontinuedReason": {
          "$ref": "#/definitions/ConceptGet"
        }
      }
    },
    "AppointmentschedulingAppointmentGet": {
      "properties": {}
    },
    "AppointmentschedulingAppointmentGetRef": {
      "properties": {}
    },
    "AppointmentschedulingAppointmentGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "PersonCreate": {
      "required": [
        "gender",
        "names"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonNameCreate"
          }
        },
        "gender": {
          "type": "string",
          "enum": [
            "M",
            "F"
          ]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthdate": {
          "type": "string",
          "format": "date"
        },
        "birthdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "dead": {
          "type": "boolean",
          "default": false
        },
        "deathDate": {
          "type": "string",
          "format": "date"
        },
        "causeOfDeath": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAddressCreate"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAttributeCreate"
          }
        },
        "deathdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "birthtime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PersonCreateFull": {
      "required": [
        "gender",
        "names"
      ],
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonNameCreate"
          }
        },
        "gender": {
          "type": "string",
          "enum": [
            "M",
            "F"
          ]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthdate": {
          "type": "string",
          "format": "date"
        },
        "birthdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "dead": {
          "type": "boolean",
          "default": false
        },
        "deathDate": {
          "type": "string",
          "format": "date"
        },
        "causeOfDeath": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAddressCreate"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAttributeCreate"
          }
        },
        "deathdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "birthtime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PersonGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "M",
            "F"
          ]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "birthdateEstimated": {
          "type": "boolean"
        },
        "dead": {
          "type": "boolean"
        },
        "deathDate": {
          "type": "string",
          "format": "date"
        },
        "causeOfDeath": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAttributeGetRef"
          }
        },
        "voided": {
          "type": "boolean"
        },
        "preferredName": {
          "$ref": "#/definitions/PersonNameGetRef"
        },
        "preferredAddress": {
          "$ref": "#/definitions/PersonAddressGetRef"
        },
        "deathdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "birthtime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PersonGetRef": {
      "properties": {}
    },
    "PersonGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "M",
            "F"
          ]
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "birthdate": {
          "type": "string",
          "format": "date-time"
        },
        "birthdateEstimated": {
          "type": "boolean"
        },
        "dead": {
          "type": "boolean"
        },
        "deathDate": {
          "type": "string",
          "format": "date"
        },
        "causeOfDeath": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAttributeGetRef"
          }
        },
        "voided": {
          "type": "boolean"
        },
        "preferredName": {
          "$ref": "#/definitions/PersonNameGet"
        },
        "preferredAddress": {
          "$ref": "#/definitions/PersonAddressGet"
        },
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonNameGet"
          }
        },
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAddressGet"
          }
        },
        "deathdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "birthtime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PersonUpdate": {
      "required": [
        "causeOfDeath",
        "dead"
      ],
      "properties": {
        "dead": {
          "type": "boolean"
        },
        "causeOfDeath": {
          "type": "string"
        },
        "deathDate": {
          "type": "string",
          "format": "date"
        },
        "age": {
          "type": "integer",
          "format": "int32"
        },
        "gender": {
          "type": "string",
          "enum": [
            "M",
            "F"
          ]
        },
        "birthdate": {
          "type": "string",
          "format": "date"
        },
        "birthdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "preferredName": {
          "type": "string",
          "example": "uuid"
        },
        "preferredAddress": {
          "type": "string",
          "example": "uuid"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonAttributeCreate"
          }
        },
        "deathdateEstimated": {
          "type": "boolean",
          "default": false
        },
        "birthtime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ConceptreferencetermmapCreate": {
      "required": [
        "conceptMapType",
        "termA",
        "termB"
      ],
      "properties": {
        "termA": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "termB": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptreferencetermmapCreateFull": {
      "required": [
        "conceptMapType",
        "termA",
        "termB"
      ],
      "properties": {
        "termA": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "termB": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptreferencetermmapGet": {
      "properties": {
        "termA": {
          "$ref": "#/definitions/ConceptreferencetermGetRef"
        },
        "termB": {
          "$ref": "#/definitions/ConceptreferencetermGetRef"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeGetRef"
        }
      }
    },
    "ConceptreferencetermmapGetRef": {
      "properties": {}
    },
    "ConceptreferencetermmapGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "termA": {
          "$ref": "#/definitions/ConceptreferencetermGet"
        },
        "termB": {
          "$ref": "#/definitions/ConceptreferencetermGet"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeGet"
        }
      }
    },
    "ConceptreferencetermmapUpdate": {},
    "ReportingrestReportRequestGet": {
      "properties": {}
    },
    "ReportingrestReportRequestGetRef": {
      "properties": {}
    },
    "ReportingrestReportRequestGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ExtensionGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "appId": {
          "type": "string"
        },
        "extensionPointId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "requiredPrivilege": {
          "type": "string"
        },
        "featureToggle": {
          "type": "string"
        },
        "require": {
          "type": "string"
        },
        "script": {
          "type": "string"
        },
        "extensionParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "belongsTo": {
          "$ref": "#/definitions/AppGetRef"
        }
      }
    },
    "ExtensionGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ExtensionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ObsCreate": {
      "required": [
        "concept",
        "obsDatetime",
        "person"
      ],
      "properties": {
        "person": {
          "type": "string",
          "example": "uuid"
        },
        "obsDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "location": {
          "type": "string"
        },
        "order": {
          "type": "string"
        },
        "encounter": {
          "type": "string"
        },
        "accessionNumber": {
          "type": "string"
        },
        "groupMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valueCodedName": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "valueModifier": {
          "type": "string"
        },
        "formFieldPath": {
          "type": "string"
        },
        "formFieldNamespace": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PRELIMINARY",
            "FINAL",
            "AMENDED"
          ]
        },
        "interpretation": {
          "type": "string",
          "enum": [
            "NORMAL",
            "ABNORMAL",
            "CRITICALLY_ABNORMAL",
            "NEGATIVE",
            "POSITIVE",
            "CRITICALLY_LOW",
            "LOW",
            "HIGH",
            "CRITICALLY_HIGH",
            "VERY_SUSCEPTIBLE",
            "SUSCEPTIBLE",
            "INTERMEDIATE",
            "RESISTANT",
            "SIGNIFICANT_CHANGE_DOWN",
            "SIGNIFICANT_CHANGE_UP",
            "OFF_SCALE_LOW",
            "OFF_SCALE_HIGH"
          ]
        }
      }
    },
    "ObsCreateFull": {
      "required": [
        "concept",
        "obsDatetime",
        "person"
      ],
      "properties": {
        "person": {
          "type": "string",
          "example": "uuid"
        },
        "obsDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "location": {
          "type": "string"
        },
        "order": {
          "type": "string"
        },
        "encounter": {
          "type": "string"
        },
        "accessionNumber": {
          "type": "string"
        },
        "groupMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valueCodedName": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "valueModifier": {
          "type": "string"
        },
        "formFieldPath": {
          "type": "string"
        },
        "formFieldNamespace": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PRELIMINARY",
            "FINAL",
            "AMENDED"
          ]
        },
        "interpretation": {
          "type": "string",
          "enum": [
            "NORMAL",
            "ABNORMAL",
            "CRITICALLY_ABNORMAL",
            "NEGATIVE",
            "POSITIVE",
            "CRITICALLY_LOW",
            "LOW",
            "HIGH",
            "CRITICALLY_HIGH",
            "VERY_SUSCEPTIBLE",
            "SUSCEPTIBLE",
            "INTERMEDIATE",
            "RESISTANT",
            "SIGNIFICANT_CHANGE_DOWN",
            "SIGNIFICANT_CHANGE_UP",
            "OFF_SCALE_LOW",
            "OFF_SCALE_HIGH"
          ]
        }
      }
    },
    "ObsGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "obsDatetime": {
          "type": "string",
          "format": "date"
        },
        "accessionNumber": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "valueModifier": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "person": {
          "$ref": "#/definitions/PersonGetRef"
        },
        "obsGroup": {
          "$ref": "#/definitions/ObsGetRef"
        },
        "groupMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsGetRef"
          }
        },
        "valueCodedName": {
          "$ref": "#/definitions/ConceptNameGetRef"
        },
        "location": {
          "$ref": "#/definitions/LocationGetRef"
        },
        "order": {
          "$ref": "#/definitions/OrderGetRef"
        },
        "encounter": {
          "$ref": "#/definitions/EncounterGetRef"
        },
        "formFieldPath": {
          "type": "string"
        },
        "formFieldNamespace": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PRELIMINARY",
            "FINAL",
            "AMENDED"
          ]
        },
        "interpretation": {
          "type": "string",
          "enum": [
            "NORMAL",
            "ABNORMAL",
            "CRITICALLY_ABNORMAL",
            "NEGATIVE",
            "POSITIVE",
            "CRITICALLY_LOW",
            "LOW",
            "HIGH",
            "CRITICALLY_HIGH",
            "VERY_SUSCEPTIBLE",
            "SUSCEPTIBLE",
            "INTERMEDIATE",
            "RESISTANT",
            "SIGNIFICANT_CHANGE_DOWN",
            "SIGNIFICANT_CHANGE_UP",
            "OFF_SCALE_LOW",
            "OFF_SCALE_HIGH"
          ]
        }
      }
    },
    "ObsGetRef": {
      "properties": {
        "formFieldPath": {
          "type": "string"
        },
        "formFieldNamespace": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PRELIMINARY",
            "FINAL",
            "AMENDED"
          ]
        },
        "interpretation": {
          "type": "string",
          "enum": [
            "NORMAL",
            "ABNORMAL",
            "CRITICALLY_ABNORMAL",
            "NEGATIVE",
            "POSITIVE",
            "CRITICALLY_LOW",
            "LOW",
            "HIGH",
            "CRITICALLY_HIGH",
            "VERY_SUSCEPTIBLE",
            "SUSCEPTIBLE",
            "INTERMEDIATE",
            "RESISTANT",
            "SIGNIFICANT_CHANGE_DOWN",
            "SIGNIFICANT_CHANGE_UP",
            "OFF_SCALE_LOW",
            "OFF_SCALE_HIGH"
          ]
        }
      }
    },
    "ObsGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "obsDatetime": {
          "type": "string",
          "format": "date"
        },
        "accessionNumber": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "valueModifier": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "person": {
          "$ref": "#/definitions/PersonGet"
        },
        "obsGroup": {
          "$ref": "#/definitions/ObsGet"
        },
        "groupMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsGet"
          }
        },
        "valueCodedName": {
          "$ref": "#/definitions/ConceptNameGet"
        },
        "location": {
          "$ref": "#/definitions/LocationGet"
        },
        "order": {
          "$ref": "#/definitions/OrderGet"
        },
        "encounter": {
          "$ref": "#/definitions/EncounterGet"
        },
        "formFieldPath": {
          "type": "string"
        },
        "formFieldNamespace": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "PRELIMINARY",
            "FINAL",
            "AMENDED"
          ]
        },
        "interpretation": {
          "type": "string",
          "enum": [
            "NORMAL",
            "ABNORMAL",
            "CRITICALLY_ABNORMAL",
            "NEGATIVE",
            "POSITIVE",
            "CRITICALLY_LOW",
            "LOW",
            "HIGH",
            "CRITICALLY_HIGH",
            "VERY_SUSCEPTIBLE",
            "SUSCEPTIBLE",
            "INTERMEDIATE",
            "RESISTANT",
            "SIGNIFICANT_CHANGE_DOWN",
            "SIGNIFICANT_CHANGE_UP",
            "OFF_SCALE_LOW",
            "OFF_SCALE_HIGH"
          ]
        }
      }
    },
    "ObsUpdate": {},
    "LocationtagGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "LocationtagGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "LocationtagGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "LocationtagCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "retiredReason": {
          "type": "string"
        }
      }
    },
    "LocationtagCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "retiredReason": {
          "type": "string"
        }
      }
    },
    "LocationtagUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "retiredReason": {
          "type": "string"
        }
      }
    },
    "ApptemplateGet": {
      "properties": {}
    },
    "ApptemplateGetRef": {
      "properties": {}
    },
    "ApptemplateGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "RelationshipGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "personA": {
          "$ref": "#/definitions/PersonGetRef"
        },
        "relationshipType": {
          "$ref": "#/definitions/RelationshiptypeGetRef"
        },
        "personB": {
          "$ref": "#/definitions/PersonGetRef"
        }
      }
    },
    "RelationshipGetRef": {
      "properties": {}
    },
    "RelationshipGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "personA": {
          "$ref": "#/definitions/PersonGet"
        },
        "relationshipType": {
          "$ref": "#/definitions/RelationshiptypeGet"
        },
        "personB": {
          "$ref": "#/definitions/PersonGet"
        }
      }
    },
    "RelationshipCreate": {
      "required": [
        "personA",
        "personB",
        "relationshipType"
      ],
      "properties": {
        "personA": {
          "type": "string",
          "example": "uuid"
        },
        "relationshipType": {
          "type": "string",
          "example": "uuid"
        },
        "personB": {
          "type": "string",
          "example": "uuid"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "RelationshipCreateFull": {
      "required": [
        "personA",
        "personB",
        "relationshipType"
      ],
      "properties": {
        "personA": {
          "$ref": "#/definitions/PersonCreate"
        },
        "relationshipType": {
          "$ref": "#/definitions/RelationshiptypeCreate"
        },
        "personB": {
          "$ref": "#/definitions/PersonCreate"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "RelationshipUpdate": {
      "properties": {
        "voided": {
          "type": "boolean"
        }
      }
    },
    "UserGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "userProperties": {
          "type": "object"
        },
        "person": {
          "$ref": "#/definitions/PersonGetRef"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeGetRef"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleGetRef"
          }
        }
      }
    },
    "UserGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "UserGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "userProperties": {
          "type": "object"
        },
        "person": {
          "$ref": "#/definitions/PersonGet"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeGet"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleGet"
          }
        },
        "allRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleGet"
          }
        },
        "proficientLocales": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "secretQuestion": {
          "type": "string"
        }
      }
    },
    "UserCreate": {
      "required": [
        "name",
        "password",
        "person",
        "username"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/PersonCreate"
        },
        "systemId": {
          "type": "string"
        },
        "userProperties": {
          "type": "object"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleCreate"
          }
        },
        "proficientLocales": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "secretQuestion": {
          "type": "string"
        }
      }
    },
    "UserCreateFull": {
      "required": [
        "name",
        "password",
        "person",
        "username"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/PersonCreate"
        },
        "systemId": {
          "type": "string"
        },
        "userProperties": {
          "type": "object"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleCreate"
          }
        },
        "proficientLocales": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "secretQuestion": {
          "type": "string"
        }
      }
    },
    "UserUpdate": {
      "required": [
        "name",
        "password",
        "person",
        "username"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "person": {
          "$ref": "#/definitions/PersonCreate"
        },
        "systemId": {
          "type": "string"
        },
        "userProperties": {
          "type": "object"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleCreate"
          }
        },
        "proficientLocales": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "secretQuestion": {
          "type": "string"
        }
      }
    },
    "ProviderattributetypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        }
      }
    },
    "ProviderattributetypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ProviderattributetypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ProviderattributetypeCreate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ProviderattributetypeCreateFull": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ProviderattributetypeUpdate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "PersonimageGet": {
      "properties": {}
    },
    "PersonimageGetRef": {
      "properties": {}
    },
    "PersonimageGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ReportingrestCohortGet": {
      "properties": {}
    },
    "ReportingrestCohortGetRef": {
      "properties": {}
    },
    "ReportingrestCohortGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ModuleGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "started": {
          "type": "boolean"
        },
        "startupErrorMessage": {
          "type": "string"
        }
      }
    },
    "ModuleGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ModuleGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "started": {
          "type": "boolean"
        },
        "startupErrorMessage": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "requireOpenmrsVersion": {
          "type": "string"
        },
        "awareOfModules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredModules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ModuleactionCreate": {
      "required": [
        "action"
      ],
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "moduleId"
          }
        },
        "allModules": {
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "enum": [
            "START",
            "STOP",
            "RESTART",
            "UNLOAD",
            "INSTALL"
          ]
        },
        "installUri": {
          "type": "string"
        }
      }
    },
    "ModuleactionCreateFull": {
      "required": [
        "action"
      ],
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "moduleId"
          }
        },
        "allModules": {
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "enum": [
            "START",
            "STOP",
            "RESTART",
            "UNLOAD",
            "INSTALL"
          ]
        },
        "installUri": {
          "type": "string"
        }
      }
    },
    "DrugGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "doseStrength": {
          "type": "number",
          "format": "double"
        },
        "maximumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "minimumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        },
        "combination": {
          "type": "boolean",
          "default": false
        },
        "dosageForm": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "route": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "DrugGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "DrugGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "doseStrength": {
          "type": "number",
          "format": "double"
        },
        "maximumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "minimumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        },
        "combination": {
          "type": "boolean",
          "default": false
        },
        "dosageForm": {
          "$ref": "#/definitions/ConceptGet"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "route": {
          "$ref": "#/definitions/ConceptGet"
        }
      }
    },
    "DrugCreate": {
      "required": [
        "combination",
        "concept",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "combination": {
          "type": "boolean",
          "default": false
        },
        "concept": {
          "type": "string"
        },
        "doseStrength": {
          "type": "number",
          "format": "double"
        },
        "maximumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "minimumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        },
        "dosageForm": {
          "type": "string"
        },
        "route": {
          "type": "string"
        }
      }
    },
    "DrugCreateFull": {
      "required": [
        "combination",
        "concept",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "combination": {
          "type": "boolean",
          "default": false
        },
        "concept": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "doseStrength": {
          "type": "number",
          "format": "double"
        },
        "maximumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "minimumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        },
        "dosageForm": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "route": {
          "$ref": "#/definitions/ConceptCreate"
        }
      }
    },
    "DrugUpdate": {
      "required": [
        "combination",
        "concept",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "combination": {
          "type": "boolean",
          "default": false
        },
        "concept": {
          "type": "string"
        },
        "doseStrength": {
          "type": "number",
          "format": "double"
        },
        "maximumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "minimumDailyDose": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        },
        "dosageForm": {
          "type": "string"
        },
        "route": {
          "type": "string"
        }
      }
    },
    "RoleGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeGetRef"
          }
        },
        "inheritedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleGetRef"
          }
        }
      }
    },
    "RoleGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "RoleGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeGet"
          }
        },
        "inheritedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleGet"
          }
        },
        "allInheritedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleGet"
          }
        }
      }
    },
    "RoleCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeCreate"
          }
        },
        "inheritedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleCreate"
          }
        }
      }
    },
    "RoleCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeCreate"
          }
        },
        "inheritedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleCreate"
          }
        }
      }
    },
    "RoleUpdate": {
      "properties": {
        "description": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrivilegeCreate"
          }
        },
        "inheritedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleCreate"
          }
        }
      }
    },
    "Hl7Create": {
      "required": [
        "hl7"
      ],
      "properties": {
        "hl7": {
          "type": "string"
        }
      }
    },
    "Hl7CreateFull": {
      "required": [
        "hl7"
      ],
      "properties": {
        "hl7": {
          "type": "string"
        }
      }
    },
    "ChartSearchPreferenceGet": {
      "properties": {}
    },
    "ChartSearchPreferenceGetRef": {
      "properties": {}
    },
    "ChartSearchPreferenceGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "ServerlogGet": {
      "properties": {
        "serverLog": {
          "type": "object"
        }
      }
    },
    "ServerlogGetRef": {
      "properties": {
        "serverLog": {
          "type": "object"
        }
      }
    },
    "ServerlogGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "serverLog": {
          "type": "object"
        }
      }
    },
    "VisitattributetypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        }
      }
    },
    "VisitattributetypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "VisitattributetypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "VisitattributetypeCreate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "VisitattributetypeCreateFull": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "VisitattributetypeUpdate": {
      "required": [
        "datatypeClassname",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "datatypeClassname": {
          "type": "string"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "datatypeConfig": {
          "type": "string"
        },
        "preferredHandlerClassname": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "ChartsearchnoteGet": {
      "properties": {}
    },
    "ChartsearchnoteGetRef": {
      "properties": {}
    },
    "ChartsearchnoteGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        }
      }
    },
    "EncounterCreate": {
      "required": [
        "encounterType",
        "patient"
      ],
      "properties": {
        "patient": {
          "$ref": "#/definitions/PatientCreate"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeCreate"
        },
        "encounterDatetime": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "form": {
          "$ref": "#/definitions/FormCreate"
        },
        "provider": {
          "type": "string"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderCreate"
          }
        },
        "obs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsCreate"
          }
        }
      }
    },
    "EncounterCreateFull": {
      "required": [
        "encounterType",
        "patient"
      ],
      "properties": {
        "patient": {
          "$ref": "#/definitions/PatientCreate"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeCreate"
        },
        "encounterDatetime": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "form": {
          "$ref": "#/definitions/FormCreate"
        },
        "provider": {
          "type": "string"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderCreate"
          }
        },
        "obs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsCreate"
          }
        }
      }
    },
    "EncounterGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "encounterDatetime": {
          "type": "string",
          "format": "date"
        },
        "provider": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/PatientGetRef"
        },
        "location": {
          "$ref": "#/definitions/LocationGetRef"
        },
        "form": {
          "$ref": "#/definitions/FormGetRef"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeGetRef"
        },
        "obs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsGetRef"
          }
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderGetRef"
          }
        }
      }
    },
    "EncounterGetRef": {
      "properties": {}
    },
    "EncounterGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "encounterDatetime": {
          "type": "string",
          "format": "date"
        },
        "provider": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "patient": {
          "$ref": "#/definitions/PatientGet"
        },
        "location": {
          "$ref": "#/definitions/LocationGet"
        },
        "form": {
          "$ref": "#/definitions/FormGet"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeGet"
        },
        "obs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsGet"
          }
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderGet"
          }
        }
      }
    },
    "EncounterUpdate": {
      "required": [
        "encounterType",
        "patient"
      ],
      "properties": {
        "patient": {
          "$ref": "#/definitions/PatientCreate"
        },
        "encounterType": {
          "$ref": "#/definitions/EncountertypeCreate"
        },
        "encounterDatetime": {
          "type": "string",
          "format": "date"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "form": {
          "$ref": "#/definitions/FormCreate"
        },
        "provider": {
          "type": "string"
        },
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderCreate"
          }
        },
        "obs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObsCreate"
          }
        }
      }
    },
    "WorkflowCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "WorkflowCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "WorkflowGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStateGetRef"
          }
        }
      }
    },
    "WorkflowGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStateGet"
          }
        }
      }
    },
    "WorkflowGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowStateGet"
          }
        }
      }
    },
    "WorkflowUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "OrderfrequencyGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "OrderfrequencyGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "OrderfrequencyGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "OrderfrequencyUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PatientidentifiertypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "formatDescription": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "checkDigit": {
          "type": "boolean"
        },
        "validator": {
          "type": "string"
        },
        "locationBehavior": {
          "type": "string",
          "enum": [
            "REQUIRED",
            "NOT_USED"
          ]
        },
        "uniquenessBehavior": {
          "type": "string"
        }
      }
    },
    "PatientidentifiertypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "PatientidentifiertypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "format": {
          "type": "string"
        },
        "formatDescription": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "checkDigit": {
          "type": "boolean"
        },
        "validator": {
          "type": "string"
        },
        "locationBehavior": {
          "type": "string",
          "enum": [
            "REQUIRED",
            "NOT_USED"
          ]
        },
        "uniquenessBehavior": {
          "type": "string"
        }
      }
    },
    "PatientidentifiertypeCreate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "formatDescription": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "checkDigit": {
          "type": "boolean"
        },
        "validator": {
          "type": "string"
        },
        "locationBehavior": {
          "type": "string",
          "enum": [
            "REQUIRED",
            "NOT_USED"
          ]
        },
        "uniquenessBehavior": {
          "type": "string"
        }
      }
    },
    "PatientidentifiertypeCreateFull": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "formatDescription": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "checkDigit": {
          "type": "boolean"
        },
        "validator": {
          "type": "string"
        },
        "locationBehavior": {
          "type": "string",
          "enum": [
            "REQUIRED",
            "NOT_USED"
          ]
        },
        "uniquenessBehavior": {
          "type": "string"
        }
      }
    },
    "PatientidentifiertypeUpdate": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "formatDescription": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "checkDigit": {
          "type": "boolean"
        },
        "validator": {
          "type": "string"
        },
        "locationBehavior": {
          "type": "string",
          "enum": [
            "REQUIRED",
            "NOT_USED"
          ]
        },
        "uniquenessBehavior": {
          "type": "string"
        }
      }
    },
    "RelationshiptypeGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "aIsToB": {
          "type": "string"
        },
        "bIsToA": {
          "type": "string"
        }
      }
    },
    "RelationshiptypeGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "RelationshiptypeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "aIsToB": {
          "type": "string"
        },
        "bIsToA": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RelationshiptypeCreate": {
      "required": [
        "aIsToB",
        "bIsToA",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "aIsToB": {
          "type": "string"
        },
        "bIsToA": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RelationshiptypeCreateFull": {
      "required": [
        "aIsToB",
        "bIsToA",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "aIsToB": {
          "type": "string"
        },
        "bIsToA": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RelationshiptypeUpdate": {},
    "FormResourceGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "valueReference": {
          "type": "string"
        }
      }
    },
    "FormResourceGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "FormResourceGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "valueReference": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        }
      }
    },
    "FormResourceCreate": {
      "properties": {
        "form": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueReference": {
          "type": "string"
        }
      }
    },
    "FormResourceCreateFull": {
      "properties": {
        "form": {
          "$ref": "#/definitions/FormCreate"
        },
        "name": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueReference": {
          "type": "string"
        }
      }
    },
    "FormResourceUpdate": {
      "properties": {
        "form": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "dataType": {
          "type": "string"
        },
        "handler": {
          "type": "string"
        },
        "handlerConfig": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueReference": {
          "type": "string"
        }
      }
    },
    "LocationAttributeGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "LocationAttributeGetRef": {
      "properties": {}
    },
    "LocationAttributeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "LocationAttributeCreate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "LocationAttributeCreateFull": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "LocationAttributeUpdate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PatientAllergyCreate": {
      "required": [
        "allergen"
      ],
      "properties": {
        "allergen": {
          "type": "object"
        },
        "severity": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string"
            }
          }
        },
        "comment": {
          "type": "string"
        },
        "reactions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "allergy": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  }
                }
              },
              "reaction": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PatientAllergyCreateFull": {
      "required": [
        "allergen"
      ],
      "properties": {
        "allergen": {
          "type": "object"
        },
        "severity": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string"
            }
          }
        },
        "comment": {
          "type": "string"
        },
        "reactions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "allergy": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  }
                }
              },
              "reaction": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PatientAllergyGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "allergen": {
          "type": "object"
        },
        "severity": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "comment": {
          "type": "string"
        },
        "reactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptGetRef"
          }
        },
        "patient": {
          "$ref": "#/definitions/PatientGetRef"
        }
      }
    },
    "PatientAllergyGetRef": {
      "properties": {}
    },
    "PatientAllergyGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "allergen": {
          "type": "object"
        },
        "severity": {
          "$ref": "#/definitions/ConceptGet"
        },
        "comment": {
          "type": "string"
        },
        "reactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConceptGet"
          }
        },
        "patient": {
          "$ref": "#/definitions/PatientGet"
        }
      }
    },
    "PatientAllergyUpdate": {
      "required": [
        "allergen"
      ],
      "properties": {
        "allergen": {
          "type": "object"
        },
        "severity": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string"
            }
          }
        },
        "comment": {
          "type": "string"
        },
        "reactions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "allergy": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  }
                }
              },
              "reaction": {
                "type": "object",
                "properties": {
                  "uuid": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "CohortMembershipGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "patientUuid": {
          "type": "string"
        }
      }
    },
    "CohortMembershipGetRef": {
      "properties": {}
    },
    "CohortMembershipGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "patientUuid": {
          "type": "string"
        }
      }
    },
    "CohortMembershipCreate": {
      "properties": {
        "patientUuid": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "CohortMembershipCreateFull": {
      "properties": {
        "patientUuid": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "CohortMembershipUpdate": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ConceptMappingGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "conceptReferenceTerm": {
          "$ref": "#/definitions/ConceptreferencetermGetRef"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeGetRef"
        }
      }
    },
    "ConceptMappingGetRef": {
      "properties": {}
    },
    "ConceptMappingGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "conceptReferenceTerm": {
          "$ref": "#/definitions/ConceptreferencetermGet"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeGet"
        }
      }
    },
    "ConceptMappingCreate": {
      "required": [
        "conceptMapType",
        "conceptReferenceTerm"
      ],
      "properties": {
        "conceptReferenceTerm": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptMappingCreateFull": {
      "required": [
        "conceptMapType",
        "conceptReferenceTerm"
      ],
      "properties": {
        "conceptReferenceTerm": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "ConceptMappingUpdate": {
      "required": [
        "conceptMapType",
        "conceptReferenceTerm"
      ],
      "properties": {
        "conceptReferenceTerm": {
          "$ref": "#/definitions/ConceptreferencetermCreate"
        },
        "conceptMapType": {
          "$ref": "#/definitions/ConceptmaptypeCreate"
        }
      }
    },
    "FormFormfieldGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "fieldNumber": {
          "type": "integer",
          "format": "int32"
        },
        "fieldPart": {
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "sortWeight": {
          "type": "number",
          "format": "float"
        },
        "retired": {
          "type": "boolean"
        },
        "parent": {
          "$ref": "#/definitions/FormFormfieldGetRef"
        },
        "form": {
          "$ref": "#/definitions/FormGetRef"
        },
        "field": {
          "$ref": "#/definitions/FieldGetRef"
        }
      }
    },
    "FormFormfieldGetRef": {
      "properties": {}
    },
    "FormFormfieldGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "fieldNumber": {
          "type": "integer",
          "format": "int32"
        },
        "fieldPart": {
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "sortWeight": {
          "type": "number",
          "format": "float"
        },
        "retired": {
          "type": "boolean"
        },
        "parent": {
          "$ref": "#/definitions/FormFormfieldGet"
        },
        "form": {
          "$ref": "#/definitions/FormGet"
        },
        "field": {
          "$ref": "#/definitions/FieldGet"
        }
      }
    },
    "FormFormfieldCreate": {
      "required": [
        "field",
        "form",
        "required"
      ],
      "properties": {
        "form": {
          "type": "string",
          "example": "uuid"
        },
        "field": {
          "type": "string",
          "example": "uuid"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "parent": {
          "type": "string",
          "example": "uuid"
        },
        "fieldNumber": {
          "type": "integer",
          "format": "int32"
        },
        "fieldPart": {
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "FormFormfieldCreateFull": {
      "required": [
        "field",
        "form",
        "required"
      ],
      "properties": {
        "form": {
          "$ref": "#/definitions/FormCreate"
        },
        "field": {
          "$ref": "#/definitions/FieldCreate"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "parent": {
          "$ref": "#/definitions/FormFormfieldCreate"
        },
        "fieldNumber": {
          "type": "integer",
          "format": "int32"
        },
        "fieldPart": {
          "type": "string"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "minOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "maxOccurs": {
          "type": "integer",
          "format": "int32"
        },
        "sortWeight": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "FormFormfieldUpdate": {},
    "PersonAddressGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "PersonAddressGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "PersonAddressGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "PersonAddressCreate": {
      "properties": {
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      }
    },
    "PersonAddressCreateFull": {
      "properties": {
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      }
    },
    "PersonAddressUpdate": {
      "properties": {
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "cityVillage": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "countyDistrict": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "address4": {
          "type": "string"
        },
        "address5": {
          "type": "string"
        },
        "address6": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "latitude": {
          "type": "string"
        },
        "longitude": {
          "type": "string"
        }
      }
    },
    "CustomdatatypeHandlersGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "handlerClassname": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "CustomdatatypeHandlersGetRef": {
      "properties": {}
    },
    "CustomdatatypeHandlersGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "handlerClassname": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptAttributeGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "ConceptAttributeGetRef": {
      "properties": {}
    },
    "ConceptAttributeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "ConceptAttributeCreate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ConceptAttributeCreateFull": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ConceptAttributeUpdate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PersonAttributeGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "attributeType": {
          "$ref": "#/definitions/PersonattributetypeGetRef"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "PersonAttributeGetRef": {
      "properties": {}
    },
    "PersonAttributeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "attributeType": {
          "$ref": "#/definitions/PersonattributetypeGetRef"
        },
        "voided": {
          "type": "boolean"
        },
        "hydratedObject": {
          "type": "string"
        }
      }
    },
    "PersonAttributeCreate": {
      "required": [
        "attributeType"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        },
        "hydratedObject": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "PersonAttributeCreateFull": {
      "required": [
        "attributeType"
      ],
      "properties": {
        "attributeType": {
          "$ref": "#/definitions/PersonattributetypeCreate"
        },
        "value": {
          "type": "string"
        },
        "hydratedObject": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "PersonAttributeUpdate": {
      "required": [
        "attributeType"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        },
        "hydratedObject": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "WorkflowStateGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "WorkflowStateGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "WorkflowStateGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        }
      }
    },
    "WorkflowStateCreate": {},
    "WorkflowStateCreateFull": {},
    "PersonNameGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "familyName2": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "PersonNameGetRef": {
      "properties": {}
    },
    "PersonNameGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "familyName2": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "preferred": {
          "type": "boolean"
        },
        "prefix": {
          "type": "string"
        },
        "familyNamePrefix": {
          "type": "string"
        },
        "familyNameSuffix": {
          "type": "string"
        },
        "degree": {
          "type": "string"
        }
      }
    },
    "PersonNameCreate": {
      "required": [
        "givenName"
      ],
      "properties": {
        "givenName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "familyName2": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "prefix": {
          "type": "string"
        },
        "familyNamePrefix": {
          "type": "string"
        },
        "familyNameSuffix": {
          "type": "string"
        },
        "degree": {
          "type": "string"
        }
      }
    },
    "PersonNameCreateFull": {
      "required": [
        "givenName"
      ],
      "properties": {
        "givenName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "familyName2": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "prefix": {
          "type": "string"
        },
        "familyNamePrefix": {
          "type": "string"
        },
        "familyNameSuffix": {
          "type": "string"
        },
        "degree": {
          "type": "string"
        }
      }
    },
    "PersonNameUpdate": {
      "required": [
        "givenName"
      ],
      "properties": {
        "givenName": {
          "type": "string"
        },
        "middleName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "familyName2": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "prefix": {
          "type": "string"
        },
        "familyNamePrefix": {
          "type": "string"
        },
        "familyNameSuffix": {
          "type": "string"
        },
        "degree": {
          "type": "string"
        }
      }
    },
    "DrugIngredientGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "strength": {
          "type": "number",
          "format": "double"
        },
        "ingredient": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "units": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "DrugIngredientGetRef": {
      "properties": {}
    },
    "DrugIngredientGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "strength": {
          "type": "number",
          "format": "double"
        },
        "ingredient": {
          "$ref": "#/definitions/ConceptGet"
        },
        "units": {
          "$ref": "#/definitions/ConceptGet"
        }
      }
    },
    "DrugIngredientCreate": {
      "required": [
        "ingredient"
      ],
      "properties": {
        "ingredient": {
          "type": "string",
          "example": "uuid"
        },
        "strength": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "DrugIngredientCreateFull": {
      "required": [
        "ingredient"
      ],
      "properties": {
        "ingredient": {
          "type": "string",
          "example": "uuid"
        },
        "strength": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "DrugIngredientUpdate": {
      "required": [
        "ingredient"
      ],
      "properties": {
        "ingredient": {
          "type": "string",
          "example": "uuid"
        },
        "strength": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "VisitAttributeGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "VisitAttributeGetRef": {
      "properties": {}
    },
    "VisitAttributeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "VisitAttributeCreate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "VisitAttributeCreateFull": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "VisitAttributeUpdate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PatientIdentifierGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "voided": {
          "type": "boolean"
        },
        "identifierType": {
          "$ref": "#/definitions/PatientidentifiertypeGetRef"
        },
        "location": {
          "$ref": "#/definitions/LocationGetRef"
        }
      }
    },
    "PatientIdentifierGetRef": {
      "properties": {}
    },
    "PatientIdentifierGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        },
        "voided": {
          "type": "boolean"
        },
        "identifierType": {
          "$ref": "#/definitions/PatientidentifiertypeGet"
        },
        "location": {
          "$ref": "#/definitions/LocationGet"
        }
      }
    },
    "PatientIdentifierCreate": {
      "required": [
        "identifier",
        "identifierType"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "identifierType": {
          "type": "string",
          "example": "uuid"
        },
        "location": {
          "type": "string",
          "example": "uuid"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "PatientIdentifierCreateFull": {
      "required": [
        "identifier",
        "identifierType"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "identifierType": {
          "$ref": "#/definitions/PatientidentifiertypeCreate"
        },
        "location": {
          "$ref": "#/definitions/LocationCreate"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "PatientIdentifierUpdate": {
      "required": [
        "identifier",
        "identifierType"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "identifierType": {
          "type": "string",
          "example": "uuid"
        },
        "location": {
          "type": "string",
          "example": "uuid"
        },
        "preferred": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "OrdersetOrdersetmemberGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "orderTemplate": {
          "type": "string"
        },
        "orderTemplateType": {
          "type": "string"
        },
        "orderType": {
          "$ref": "#/definitions/OrdertypeGetRef"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        }
      }
    },
    "OrdersetOrdersetmemberGetRef": {
      "properties": {}
    },
    "OrdersetOrdersetmemberGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "retired": {
          "type": "boolean"
        },
        "orderTemplate": {
          "type": "string"
        },
        "orderTemplateType": {
          "type": "string"
        },
        "orderType": {
          "$ref": "#/definitions/OrdertypeGet"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        }
      }
    },
    "OrdersetOrdersetmemberCreate": {
      "properties": {
        "orderType": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string"
            }
          }
        },
        "orderTemplate": {
          "type": "string"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "OrdersetOrdersetmemberCreateFull": {
      "properties": {
        "orderType": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string"
            }
          }
        },
        "orderTemplate": {
          "type": "string"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "OrdersetOrdersetmemberUpdate": {
      "properties": {
        "orderType": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string"
            }
          }
        },
        "orderTemplate": {
          "type": "string"
        },
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "retired": {
          "type": "boolean"
        }
      }
    },
    "ConceptNameGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "localePreferred": {
          "type": "boolean"
        },
        "conceptNameType": {
          "type": "string",
          "enum": [
            "FULLY_SPECIFIED",
            "SHORT",
            "INDEX_TERM"
          ]
        }
      }
    },
    "ConceptNameGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptNameGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "localePreferred": {
          "type": "boolean"
        },
        "conceptNameType": {
          "type": "string",
          "enum": [
            "FULLY_SPECIFIED",
            "SHORT",
            "INDEX_TERM"
          ]
        }
      }
    },
    "ConceptNameCreate": {
      "required": [
        "locale",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "localePreferred": {
          "type": "boolean",
          "default": false
        },
        "conceptNameType": {
          "type": "string",
          "enum": [
            "FULLY_SPECIFIED",
            "SHORT",
            "INDEX_TERM"
          ]
        }
      }
    },
    "ConceptNameCreateFull": {
      "required": [
        "locale",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "localePreferred": {
          "type": "boolean",
          "default": false
        },
        "conceptNameType": {
          "type": "string",
          "enum": [
            "FULLY_SPECIFIED",
            "SHORT",
            "INDEX_TERM"
          ]
        }
      }
    },
    "ConceptNameUpdate": {
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "FieldAnswerGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGetRef"
        },
        "field": {
          "$ref": "#/definitions/FieldGetRef"
        }
      }
    },
    "FieldAnswerGetRef": {
      "properties": {}
    },
    "FieldAnswerGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "concept": {
          "$ref": "#/definitions/ConceptGet"
        },
        "field": {
          "$ref": "#/definitions/FieldGet"
        }
      }
    },
    "FieldAnswerCreate": {
      "required": [
        "concept",
        "field"
      ],
      "properties": {
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "field": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "FieldAnswerCreateFull": {
      "required": [
        "concept",
        "field"
      ],
      "properties": {
        "concept": {
          "$ref": "#/definitions/ConceptCreate"
        },
        "field": {
          "$ref": "#/definitions/FieldCreate"
        }
      }
    },
    "FieldAnswerUpdate": {
      "required": [
        "concept",
        "field"
      ],
      "properties": {
        "concept": {
          "type": "string",
          "example": "uuid"
        },
        "field": {
          "type": "string",
          "example": "uuid"
        }
      }
    },
    "ProviderAttributeGet": {
      "properties": {
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "ProviderAttributeGetRef": {
      "properties": {}
    },
    "ProviderAttributeGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "attributeType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "ProviderAttributeCreate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProviderAttributeCreateFull": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProviderAttributeUpdate": {
      "required": [
        "attributeType",
        "value"
      ],
      "properties": {
        "attributeType": {
          "type": "string",
          "example": "uuid"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "EncounterEncounterproviderGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/ProviderGetRef"
        },
        "encounterRole": {
          "$ref": "#/definitions/EncounterroleGetRef"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "EncounterEncounterproviderGetRef": {
      "properties": {}
    },
    "EncounterEncounterproviderGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "provider": {
          "$ref": "#/definitions/ProviderGet"
        },
        "encounterRole": {
          "$ref": "#/definitions/EncounterroleGet"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "EncounterEncounterproviderCreate": {
      "properties": {
        "provider": {
          "type": "string",
          "example": "uuid"
        },
        "encounterRole": {
          "type": "string",
          "example": "uuid"
        },
        "encounter": {
          "type": "string"
        }
      }
    },
    "EncounterEncounterproviderCreateFull": {
      "properties": {
        "provider": {
          "$ref": "#/definitions/ProviderCreate"
        },
        "encounterRole": {
          "$ref": "#/definitions/EncounterroleCreate"
        },
        "encounter": {
          "$ref": "#/definitions/EncounterCreate"
        }
      }
    },
    "EncounterEncounterproviderUpdate": {
      "properties": {
        "encounterRole": {
          "type": "string"
        },
        "voided": {
          "type": "boolean"
        },
        "voidReason": {
          "type": "string"
        }
      }
    },
    "ConceptDescriptionGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "ConceptDescriptionGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        }
      }
    },
    "ConceptDescriptionGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      }
    },
    "ConceptDescriptionCreate": {
      "required": [
        "description",
        "locale"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "fr"
        }
      }
    },
    "ConceptDescriptionCreateFull": {
      "required": [
        "description",
        "locale"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "fr"
        }
      }
    },
    "ConceptDescriptionUpdate": {
      "required": [
        "description",
        "locale"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "locale": {
          "type": "string",
          "example": "fr"
        }
      }
    },
    "ProgramenrollmentStateCreate": {
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/WorkflowStateCreate"
        }
      }
    },
    "ProgramenrollmentStateCreateFull": {
      "required": [
        "state"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/WorkflowStateCreate"
        }
      }
    },
    "ProgramenrollmentStateGet": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "voided": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/WorkflowStateGet"
        }
      }
    },
    "ProgramenrollmentStateGetRef": {
      "properties": {
        "uuid": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "voided": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/WorkflowStateGetRef"
        },
        "patientProgram": {
          "type": "object"
        }
      }
    },
    "ProgramenrollmentStateGetFull": {
      "properties": {
        "auditInfo": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "voided": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/WorkflowStateGetRef"
        },
        "patientProgram": {
          "type": "object"
        }
      }
    },
    "ProgramenrollmentStateUpdate": {
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "voided": {
          "type": "boolean"
        }
      }
    },
    "FetchAll": {
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "display": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find more info on REST Module Wiki",
    "url": "https://wiki.openmrs.org/x/xoAaAQ"
  }
}
