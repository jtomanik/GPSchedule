{% set disclaimer %}// Autogenerated content below, do not modify{% endset %}
{{disclaimer}}
{% for type in types.implementing.ViewReactor|annotated:"store" %}
// gererating ViewReactor.common for {{type.name}} with {{type.annotations.store}}
{% set inline_body %}
    {{disclaimer}}
    let store: {{type.annotations.store}}
    let action = PublishSubject<State.UserAction>()
    let state = BehaviorSubject<State>(value: .{{type.annotations.defaultState}})

    required init(store: {{type.annotations.store}}) {
        self.store = store
    }
{% endset %}
// sourcery:inline:ViewReactor.common
{{inline_body}}
// sourcery:end
{% endfor %}

{% for type in types.implementing.AppView|annotated:"viewmodel" %}
// gererating AppView.common for {{type.name}} with {{type.annotations.viewmodel}}
{% set inline_body %}
    {{disclaimer}}
    private(set) var viewModel: {{type.annotations.viewmodel}}
    private(set) var disposeBag = DisposeBag()

    required init(viewModel: {{type.annotations.viewmodel}}) {
        self.viewModel = viewModel
        super.init(nibName: nil, bundle: nil)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
{% endset %}
// sourcery:inline:AppView.common
{{inline_body}}
// sourcery:end
{% endfor %}
